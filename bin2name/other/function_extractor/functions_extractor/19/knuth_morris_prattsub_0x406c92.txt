push    rbp
mov     rbp, rsp
push    rbx
sub     rsp, 78h
mov     [rbp+haystack], rdi
mov     [rbp+needle], rsi
mov     [rbp+needle_len], rdx
mov     [rbp+resultp], rcx
mov     rax, fs:28h
mov     [rbp+var_18], rax
xor     eax, eax
mov     rax, [rbp-78h]
mov     [rbp+m], rax
mov     rax, 1FFFFFFFFFFFFFFFh
cmp     [rbp+m], rax
ja      short loc_406D39
mov     rax, [rbp-28h]
shl     rax, 3
cmp     rax, 0FAFh
ja      short loc_406D27
mov     rax, [rbp-28h]
add     rax, 2
shl     rax, 3
lea     rdx, [rax+0Fh]
mov     eax, 10h
sub     rax, 1
add     rax, rdx
mov     esi, 10h
mov     edx, 0
div     rsi
imul    rax, 10h
sub     rsp, rax
mov     rax, rsp
add     rax, 0Fh
shr     rax, 4
shl     rax, 4
add     rax, 10h
jmp     short loc_406D3E
mov     rax, [rbp-28h]
shl     rax, 3
mov     rdi, rax
call    mmalloca
jmp     short loc_406D3E
mov     eax, 0
mov     [rbp+table], rax
cmp     [rbp+table], 0
jnz     short loc_406D53
mov     eax, 0
jmp     loc_40700A
mov     rax, [rbp-20h]
add     rax, 8
mov     qword ptr [rax], 1
mov     [rbp+j], 0
mov     [rbp+i], 2
jmp     loc_406EA9
call    ___ctype_b_loc
mov     rax, [rax]
mov     rdx, [rbp-50h]
lea     rcx, [rdx-1]
mov     rdx, [rbp-70h]
add     rdx, rcx
movzx   edx, byte ptr [rdx]
movzx   edx, dl
add     rdx, rdx
add     rax, rdx
movzx   eax, word ptr [rax]
movzx   eax, ax
and     eax, 100h
test    eax, eax
jz      short loc_406DC7
mov     rax, [rbp-50h]
lea     rdx, [rax-1]
mov     rax, [rbp-70h]
add     rax, rdx
movzx   eax, byte ptr [rax]
movzx   eax, al
mov     edi, eax
call    _tolower
jmp     short loc_406DD9
mov     rax, [rbp-50h]
lea     rdx, [rax-1]
mov     rax, [rbp-70h]
add     rax, rdx
movzx   eax, byte ptr [rax]
mov     [rbp+b], al
movzx   ebx, byte ptr [rbp-51h]
call    ___ctype_b_loc
mov     rax, [rax]
mov     rcx, [rbp-70h]
mov     rdx, [rbp-48h]
add     rdx, rcx
movzx   edx, byte ptr [rdx]
movzx   edx, dl
add     rdx, rdx
add     rax, rdx
movzx   eax, word ptr [rax]
movzx   eax, ax
and     eax, 100h
test    eax, eax
jz      short loc_406E28
mov     rdx, [rbp-70h]
mov     rax, [rbp-48h]
add     rax, rdx
movzx   eax, byte ptr [rax]
movzx   eax, al
mov     edi, eax
call    _tolower
jmp     short loc_406E39
mov     rdx, [rbp-70h]
mov     rax, [rbp-48h]
add     rax, rdx
movzx   eax, byte ptr [rax]
movzx   eax, al
cmp     ebx, eax
jnz     short loc_406E62
mov     rax, [rbp-50h]
lea     rdx, [rax*8+0]
mov     rax, [rbp-20h]
add     rdx, rax
add     [rbp+j], 1
mov     rax, [rbp-50h]
sub     rax, [rbp-48h]
mov     [rdx], rax
jmp     short loc_406EA4
cmp     [rbp+j], 0
jnz     short loc_406E85
mov     rax, [rbp-50h]
lea     rdx, [rax*8+0]
mov     rax, [rbp-20h]
add     rdx, rax
mov     rax, [rbp-50h]
mov     [rdx], rax
jmp     short loc_406EA4
mov     rax, [rbp-48h]
lea     rdx, [rax*8+0]
mov     rax, [rbp-20h]
add     rax, rdx
mov     rax, [rax]
sub     [rbp+j], rax
jmp     loc_406DDC
add     [rbp+i], 1
mov     rax, [rbp-50h]
cmp     rax, [rbp-28h]
jb      loc_406D77
mov     rax, [rbp-80h]
mov     qword ptr [rax], 0
mov     [rbp+j_0], 0
mov     rax, [rbp-68h]
mov     [rbp+rhaystack], rax
mov     rax, [rbp-68h]
mov     [rbp+phaystack], rax
jmp     loc_406FEA
call    ___ctype_b_loc
mov     rax, [rax]
mov     rcx, [rbp-70h]
mov     rdx, [rbp-40h]
add     rdx, rcx
movzx   edx, byte ptr [rdx]
movzx   edx, dl
add     rdx, rdx
add     rax, rdx
movzx   eax, word ptr [rax]
movzx   eax, ax
and     eax, 100h
test    eax, eax
jz      short loc_406F29
mov     rdx, [rbp-70h]
mov     rax, [rbp-40h]
add     rax, rdx
movzx   eax, byte ptr [rax]
movzx   eax, al
mov     edi, eax
call    _tolower
mov     ebx, eax
jmp     short loc_406F3A
mov     rdx, [rbp-70h]
mov     rax, [rbp-40h]
add     rax, rdx
movzx   eax, byte ptr [rax]
movzx   ebx, al
call    ___ctype_b_loc
mov     rdx, [rax]
mov     rax, [rbp-30h]
movzx   eax, byte ptr [rax]
movzx   eax, al
add     rax, rax
add     rax, rdx
movzx   eax, word ptr [rax]
movzx   eax, ax
and     eax, 100h
test    eax, eax
jz      short loc_406F74
mov     rax, [rbp-30h]
movzx   eax, byte ptr [rax]
movzx   eax, al
mov     edi, eax
call    _tolower
jmp     short loc_406F7E
mov     rax, [rbp-30h]
movzx   eax, byte ptr [rax]
movzx   eax, al
cmp     ebx, eax
jnz     short loc_406FA3
add     [rbp+j_0], 1
add     [rbp+phaystack], 1
mov     rax, [rbp-40h]
cmp     rax, [rbp-28h]
jnz     short loc_406FEA
mov     rax, [rbp-80h]
mov     rdx, [rbp-38h]
mov     [rax], rdx
jmp     short loc_406FF9
cmp     [rbp+j_0], 0
jz      short loc_406FE0
mov     rax, [rbp-40h]
lea     rdx, [rax*8+0]
mov     rax, [rbp-20h]
add     rax, rdx
mov     rax, [rax]
add     [rbp+rhaystack], rax
mov     rax, [rbp-40h]
lea     rdx, [rax*8+0]
mov     rax, [rbp-20h]
add     rax, rdx
mov     rax, [rax]
sub     [rbp+j_0], rax
jmp     short loc_406FEA
add     [rbp+rhaystack], 1
add     [rbp+phaystack], 1
mov     rax, [rbp-30h]
movzx   eax, byte ptr [rax]
test    al, al
jnz     loc_406EDF
mov     rax, [rbp-20h]
mov     rdi, rax
call    freea
mov     eax, 1
mov     rsi, [rbp-18h]
xor     rsi, fs:28h
jz      short loc_40701E
call    ___stack_chk_fail
mov     rbx, [rbp-8]
leave
retn