push    rbp
mov     rbp, rsp
push    rbx
sub     rsp, 0A8h
mov     [rbp+buffer], rdi
mov     [rbp+buffersize], rsi
mov     [rbp+arg], rdx
mov     [rbp+argsize], rcx
mov     [rbp+quoting_style], r8d
mov     [rbp+flags], r9d
mov     rax, [rbp+10h]
mov     [rbp+quote_these_too], rax
mov     rax, [rbp+18h]
mov     [rbp+left_quote], rax
mov     rax, [rbp+20h]
mov     [rbp+right_quote], rax
mov     rax, fs:28h
mov     [rbp+var_18], rax
xor     eax, eax
mov     [rbp+len], 0
mov     [rbp+quote_string], 0
mov     [rbp+quote_string_len], 0
mov     [rbp+backslash_escapes], 0
call    ___ctype_get_mb_cur_max
cmp     rax, 1
setz    al
mov     [rbp+unibyte_locale], al
mov     eax, [rbp-98h]
and     eax, 2
test    eax, eax
setnz   al
mov     [rbp+elide_outer_quotes], al
mov     [rbp+pending_shell_escape_end], 0
cmp     [rbp+quoting_style], 0Ah
ja      def_409AC6
mov     eax, [rbp-94h]
mov     rax, [rax*8+40F110h]
jmp     rax
mov     [rbp+quoting_style], 5
mov     [rbp+elide_outer_quotes], 1
movzx   eax, byte ptr [rbp-6Ch]
xor     eax, 1
test    al, al
jz      short loc_409AFE
mov     rax, [rbp-58h]
cmp     rax, [rbp-80h]
jnb     short loc_409AF9
mov     rdx, [rbp-78h]
mov     rax, [rbp-58h]
add     rax, rdx
mov     byte ptr [rax], 22h
add     [rbp+len], 1
mov     [rbp+backslash_escapes], 1
mov     [rbp+quote_string], 40F105h
mov     [rbp+quote_string_len], 1
jmp     loc_409C31
mov     [rbp+backslash_escapes], 1
mov     [rbp+elide_outer_quotes], 0
jmp     loc_409C31
cmp     [rbp+quoting_style], 0Ah
jz      short loc_409B5F
mov     eax, [rbp-94h]
mov     esi, eax
mov     edi, 40F109h
call    gettext_quote
mov     [rbp+left_quote], rax
mov     eax, [rbp-94h]
mov     esi, eax
mov     edi, 40F107h
call    gettext_quote
mov     [rbp+right_quote], rax
movzx   eax, byte ptr [rbp-6Ch]
xor     eax, 1
test    al, al
jz      short loc_409BAA
mov     rax, [rbp-0A8h]
mov     [rbp+quote_string], rax
jmp     short loc_409B9F
mov     rax, [rbp-58h]
cmp     rax, [rbp-80h]
jnb     short loc_409B95
mov     rdx, [rbp-78h]
mov     rax, [rbp-58h]
add     rdx, rax
mov     rax, [rbp-50h]
movzx   eax, byte ptr [rax]
mov     [rdx], al
add     [rbp+len], 1
add     [rbp+quote_string], 1
mov     rax, [rbp-50h]
movzx   eax, byte ptr [rax]
test    al, al
jnz     short loc_409B77
mov     [rbp+backslash_escapes], 1
mov     rax, [rbp-0B0h]
mov     [rbp+quote_string], rax
mov     rax, [rbp-50h]
mov     rdi, rax
call    _strlen
mov     [rbp+quote_string_len], rax
jmp     short loc_409C31
mov     [rbp+backslash_escapes], 1
mov     [rbp+elide_outer_quotes], 1
movzx   eax, byte ptr [rbp-6Ch]
xor     eax, 1
test    al, al
jz      short loc_409BE2
mov     [rbp+backslash_escapes], 1
mov     [rbp+quoting_style], 2
movzx   eax, byte ptr [rbp-6Ch]
xor     eax, 1
test    al, al
jz      short loc_409C14
mov     rax, [rbp-58h]
cmp     rax, [rbp-80h]
jnb     short loc_409C0F
mov     rdx, [rbp-78h]
mov     rax, [rbp-58h]
add     rax, rdx
mov     byte ptr [rax], 27h
add     [rbp+len], 1
mov     [rbp+quote_string], 40F107h
mov     [rbp+quote_string_len], 1
jmp     short loc_409C31
mov     [rbp+elide_outer_quotes], 0
jmp     short loc_409C31
call    _abort
mov     [rbp+i], 0
jmp     loc_40A64D
mov     [rbp+is_right_quote], 0
mov     [rbp+escaping], 0
cmp     [rbp+backslash_escapes], 0
jz      loc_409CE0
cmp     [rbp+quoting_style], 2
jz      loc_409CE0
cmp     [rbp+quote_string_len], 0
jz      short loc_409CE0
mov     rdx, [rbp-60h]
mov     rax, [rbp-48h]
lea     rbx, [rdx+rax]
cmp     [rbp+argsize], 0FFFFFFFFFFFFFFFFh
jnz     short loc_409CA0
cmp     [rbp+quote_string_len], 1
jbe     short loc_409CA0
mov     rax, [rbp-88h]
mov     rdi, rax
call    _strlen
mov     [rbp+argsize], rax
mov     rax, [rbp-90h]
jmp     short loc_409CA7
mov     rax, [rbp-90h]
cmp     rbx, rax
ja      short loc_409CE0
mov     rdx, [rbp-88h]
mov     rax, [rbp-60h]
lea     rcx, [rdx+rax]
mov     rdx, [rbp-48h]
mov     rax, [rbp-50h]
mov     rsi, rax
mov     rdi, rcx
call    _memcmp
test    eax, eax
jnz     short loc_409CE0
cmp     [rbp+elide_outer_quotes], 0
jnz     loc_40A700
mov     [rbp+is_right_quote], 1
mov     rdx, [rbp-88h]
mov     rax, [rbp-60h]
add     rax, rdx
movzx   eax, byte ptr [rax]
mov     [rbp+c], al
movzx   eax, byte ptr [rbp-6Ah]
cmp     eax, 7Eh
ja      def_409D0B
mov     eax, eax
mov     rax, [rax*8+40F168h]
jmp     rax
cmp     [rbp+backslash_escapes], 0
jz      loc_409E40
cmp     [rbp+elide_outer_quotes], 0
jnz     loc_40A703
mov     [rbp+escaping], 1
cmp     [rbp+quoting_style], 2
jnz     short loc_409D94
movzx   eax, byte ptr [rbp-6Bh]
xor     eax, 1
test    al, al
jz      short loc_409D94
mov     rax, [rbp-58h]
cmp     rax, [rbp-80h]
jnb     short loc_409D51
mov     rdx, [rbp-78h]
mov     rax, [rbp-58h]
add     rax, rdx
mov     byte ptr [rax], 27h
add     [rbp+len], 1
mov     rax, [rbp-58h]
cmp     rax, [rbp-80h]
jnb     short loc_409D6E
mov     rdx, [rbp-78h]
mov     rax, [rbp-58h]
add     rax, rdx
mov     byte ptr [rax], 24h
add     [rbp+len], 1
mov     rax, [rbp-58h]
cmp     rax, [rbp-80h]
jnb     short loc_409D8B
mov     rdx, [rbp-78h]
mov     rax, [rbp-58h]
add     rax, rdx
mov     byte ptr [rax], 27h
add     [rbp+len], 1
mov     [rbp+pending_shell_escape_end], 1
mov     rax, [rbp-58h]
cmp     rax, [rbp-80h]
jnb     short loc_409DAC
mov     rdx, [rbp-78h]
mov     rax, [rbp-58h]
add     rax, rdx
mov     byte ptr [rax], 5Ch
add     [rbp+len], 1
cmp     [rbp+quoting_style], 2
jz      short loc_409E37
mov     rax, [rbp-60h]
add     rax, 1
cmp     rax, [rbp-90h]
jnb     short loc_409E37
mov     rax, [rbp-60h]
lea     rdx, [rax+1]
mov     rax, [rbp-88h]
add     rax, rdx
movzx   eax, byte ptr [rax]
cmp     al, 2Fh
jle     short loc_409E37
mov     rax, [rbp-60h]
lea     rdx, [rax+1]
mov     rax, [rbp-88h]
add     rax, rdx
movzx   eax, byte ptr [rax]
cmp     al, 39h
jg      short loc_409E37
mov     rax, [rbp-58h]
cmp     rax, [rbp-80h]
jnb     short loc_409E15
mov     rdx, [rbp-78h]
mov     rax, [rbp-58h]
add     rax, rdx
mov     byte ptr [rax], 30h
add     [rbp+len], 1
mov     rax, [rbp-58h]
cmp     rax, [rbp-80h]
jnb     short loc_409E32
mov     rdx, [rbp-78h]
mov     rax, [rbp-58h]
add     rax, rdx
mov     byte ptr [rax], 30h
add     [rbp+len], 1
mov     [rbp+c], 30h
jmp     loc_40A4BC
mov     eax, [rbp-98h]
and     eax, 1
test    eax, eax
jz      loc_40A4BC
jmp     loc_40A648
mov     eax, [rbp-94h]
cmp     eax, 2
jz      short loc_409E6B
cmp     eax, 5
jz      short loc_409E7A
jmp     loc_409F94
cmp     [rbp+elide_outer_quotes], 0
jz      loc_409F8D
jmp     force_outer_quoting_style
mov     eax, [rbp-98h]
and     eax, 4
test    eax, eax
jz      loc_409F93
mov     rax, [rbp-60h]
add     rax, 2
cmp     rax, [rbp-90h]
jnb     loc_409F93
mov     rax, [rbp-60h]
lea     rdx, [rax+1]
mov     rax, [rbp-88h]
add     rax, rdx
movzx   eax, byte ptr [rax]
cmp     al, 3Fh
jnz     loc_409F93
mov     rax, [rbp-60h]
lea     rdx, [rax+2]
mov     rax, [rbp-88h]
add     rax, rdx
movzx   eax, byte ptr [rax]
movsx   eax, al
sub     eax, 21h
cmp     eax, 1Dh
ja      def_409EEB
mov     eax, eax
mov     rax, [rax*8+40F560h]
jmp     rax
cmp     [rbp+elide_outer_quotes], 0
jnz     loc_40A706
mov     rax, [rbp-60h]
lea     rdx, [rax+2]
mov     rax, [rbp-88h]
add     rax, rdx
movzx   eax, byte ptr [rax]
mov     [rbp+c], al
add     [rbp+i], 2
mov     rax, [rbp-58h]
cmp     rax, [rbp-80h]
jnb     short loc_409F2C
mov     rdx, [rbp-78h]
mov     rax, [rbp-58h]
add     rax, rdx
mov     byte ptr [rax], 3Fh
add     [rbp+len], 1
mov     rax, [rbp-58h]
cmp     rax, [rbp-80h]
jnb     short loc_409F49
mov     rdx, [rbp-78h]
mov     rax, [rbp-58h]
add     rax, rdx
mov     byte ptr [rax], 22h
add     [rbp+len], 1
mov     rax, [rbp-58h]
cmp     rax, [rbp-80h]
jnb     short loc_409F66
mov     rdx, [rbp-78h]
mov     rax, [rbp-58h]
add     rax, rdx
mov     byte ptr [rax], 22h
add     [rbp+len], 1
mov     rax, [rbp-58h]
cmp     rax, [rbp-80h]
jnb     short loc_409F83
mov     rdx, [rbp-78h]
mov     rax, [rbp-58h]
add     rax, rdx
mov     byte ptr [rax], 3Fh
add     [rbp+len], 1
jmp     short loc_409F8B
nop
jmp     short loc_409F93
nop
jmp     loc_40A4CC
nop
jmp     loc_40A4CC
mov     [rbp+esc], 61h
jmp     short c_escape
mov     [rbp+esc], 62h
jmp     short c_escape
mov     [rbp+esc], 66h
jmp     short c_escape
mov     [rbp+esc], 6Eh
jmp     short c_and_shell_escape
mov     [rbp+esc], 72h
jmp     short c_and_shell_escape
mov     [rbp+esc], 74h
jmp     short c_and_shell_escape
mov     [rbp+esc], 76h
jmp     short c_escape
movzx   eax, byte ptr [rbp-6Ah]
mov     [rbp+esc], al
cmp     [rbp+quoting_style], 2
jnz     short loc_409FE2
cmp     [rbp+elide_outer_quotes], 0
jz      loc_40A5D2
jmp     force_outer_quoting_style
cmp     [rbp+backslash_escapes], 0
jz      short c_and_shell_escape
cmp     [rbp+elide_outer_quotes], 0
jz      short c_and_shell_escape
cmp     [rbp+quote_string_len], 0
jnz     loc_40A5D5
cmp     [rbp+quoting_style], 2
jnz     short c_escape
cmp     [rbp+elide_outer_quotes], 0
jnz     loc_40A709
cmp     [rbp+backslash_escapes], 0
jz      loc_40A4BF
movzx   eax, byte ptr [rbp-69h]
mov     [rbp+c], al
jmp     store_escape
cmp     [rbp+argsize], 0FFFFFFFFFFFFFFFFh
jnz     short loc_40A041
mov     rax, [rbp-88h]
add     rax, 1
movzx   eax, byte ptr [rax]
test    al, al
setnz   al
jmp     short loc_40A04C
cmp     [rbp+argsize], 1
setnz   al
test    al, al
jnz     loc_40A4C2
cmp     [rbp+i], 0
jnz     loc_40A4C5
cmp     [rbp+quoting_style], 2
jnz     loc_40A4C8
cmp     [rbp+elide_outer_quotes], 0
jz      loc_40A4C8
jmp     force_outer_quoting_style
cmp     [rbp+quoting_style], 2
jnz     loc_40A4CB
cmp     [rbp+elide_outer_quotes], 0
jnz     loc_40A70C
mov     rax, [rbp-58h]
cmp     rax, [rbp-80h]
jnb     short loc_40A0AA
mov     rdx, [rbp-78h]
mov     rax, [rbp-58h]
add     rax, rdx
mov     byte ptr [rax], 27h
add     [rbp+len], 1
mov     rax, [rbp-58h]
cmp     rax, [rbp-80h]
jnb     short loc_40A0C7
mov     rdx, [rbp-78h]
mov     rax, [rbp-58h]
add     rax, rdx
mov     byte ptr [rax], 5Ch
add     [rbp+len], 1
mov     rax, [rbp-58h]
cmp     rax, [rbp-80h]
jnb     short loc_40A0E4
mov     rdx, [rbp-78h]
mov     rax, [rbp-58h]
add     rax, rdx
mov     byte ptr [rax], 27h
add     [rbp+len], 1
mov     [rbp+pending_shell_escape_end], 0
jmp     loc_40A4CB
cmp     [rbp+unibyte_locale], 0
jz      short loc_40A12A
mov     [rbp+m], 1
call    ___ctype_b_loc
mov     rax, [rax]
movzx   edx, byte ptr [rbp-6Ah]
add     rdx, rdx
add     rax, rdx
movzx   eax, word ptr [rax]
movzx   eax, ax
and     eax, 4000h
test    eax, eax
setnz   al
mov     [rbp+printable], al
jmp     loc_40A2AD
lea     rax, [rbp-20h]
mov     edx, 8
mov     esi, 0
mov     rdi, rax
call    _memset
mov     [rbp+m], 0
mov     [rbp+printable], 1
cmp     [rbp+argsize], 0FFFFFFFFFFFFFFFFh
jnz     short loc_40A16C
mov     rax, [rbp-88h]
mov     rdi, rax
call    _strlen
mov     [rbp+argsize], rax
mov     rdx, [rbp-60h]
mov     rax, [rbp-40h]
add     rdx, rax
mov     rax, [rbp-90h]
sub     rax, rdx
mov     rdi, rax
mov     rdx, [rbp-60h]
mov     rax, [rbp-40h]
add     rdx, rax
mov     rax, [rbp-88h]
lea     rsi, [rdx+rax]
lea     rdx, [rbp-20h]
lea     rax, [rbp-64h]
mov     rcx, rdx
mov     rdx, rdi
mov     rdi, rax
call    _mbrtowc
mov     [rbp+bytes], rax
cmp     [rbp+bytes], 0
jz      loc_40A2A9
cmp     [rbp+bytes], 0FFFFFFFFFFFFFFFFh
jnz     short loc_40A1CF
mov     [rbp+printable], 0
jmp     loc_40A2AD
cmp     [rbp+bytes], 0FFFFFFFFFFFFFFFEh
jnz     short loc_40A21A
mov     [rbp+printable], 0
jmp     short loc_40A1E1
add     [rbp+m], 1
mov     rdx, [rbp-60h]
mov     rax, [rbp-40h]
add     rax, rdx
cmp     rax, [rbp-90h]
jnb     loc_40A2AC
mov     rdx, [rbp-60h]
mov     rax, [rbp-40h]
add     rdx, rax
mov     rax, [rbp-88h]
add     rax, rdx
movzx   eax, byte ptr [rax]
test    al, al
jnz     short loc_40A1DC
jmp     loc_40A2AC
cmp     [rbp+elide_outer_quotes], 0
jz      short loc_40A279
cmp     [rbp+quoting_style], 2
jnz     short loc_40A279
mov     [rbp+j], 1
jmp     short loc_40A26F
mov     rdx, [rbp-60h]
mov     rax, [rbp-40h]
add     rdx, rax
mov     rax, [rbp-38h]
add     rdx, rax
mov     rax, [rbp-88h]
add     rax, rdx
movzx   eax, byte ptr [rax]
movsx   eax, al
sub     eax, 5Bh
cmp     eax, 21h
ja      short def_40A267
mov     eax, eax
mov     rax, [rax*8+40F650h]
jmp     rax
nop
add     [rbp+j], 1
mov     rax, [rbp-38h]
cmp     rax, [rbp-30h]
jb      short loc_40A233
mov     eax, [rbp-64h]
mov     edi, eax
call    _iswprint
test    eax, eax
jnz     short loc_40A28B
mov     [rbp+printable], 0
mov     rax, [rbp-30h]
add     [rbp+m], rax
lea     rax, [rbp-20h]
mov     rdi, rax
call    _mbsinit
test    eax, eax
jz      loc_40A16C
jmp     short loc_40A2AD
nop
jmp     short loc_40A2AD
nop
cmp     [rbp+m], 1
ja      short loc_40A2CD
cmp     [rbp+backslash_escapes], 0
jz      loc_40A4CC
movzx   eax, byte ptr [rbp-66h]
xor     eax, 1
test    al, al
jz      loc_40A4CC
mov     rdx, [rbp-60h]
mov     rax, [rbp-40h]
add     rax, rdx
mov     [rbp+ilim], rax
cmp     [rbp+backslash_escapes], 0
jz      loc_40A3ED
movzx   eax, byte ptr [rbp-66h]
xor     eax, 1
test    al, al
jz      loc_40A3ED
cmp     [rbp+elide_outer_quotes], 0
jnz     loc_40A712
mov     [rbp+escaping], 1
cmp     [rbp+quoting_style], 2
jnz     short loc_40A372
movzx   eax, byte ptr [rbp-6Bh]
xor     eax, 1
test    al, al
jz      short loc_40A372
mov     rax, [rbp-58h]
cmp     rax, [rbp-80h]
jnb     short loc_40A32F
mov     rdx, [rbp-78h]
mov     rax, [rbp-58h]
add     rax, rdx
mov     byte ptr [rax], 27h
add     [rbp+len], 1
mov     rax, [rbp-58h]
cmp     rax, [rbp-80h]
jnb     short loc_40A34C
mov     rdx, [rbp-78h]
mov     rax, [rbp-58h]
add     rax, rdx
mov     byte ptr [rax], 24h
add     [rbp+len], 1
mov     rax, [rbp-58h]
cmp     rax, [rbp-80h]
jnb     short loc_40A369
mov     rdx, [rbp-78h]
mov     rax, [rbp-58h]
add     rax, rdx
mov     byte ptr [rax], 27h
add     [rbp+len], 1
mov     [rbp+pending_shell_escape_end], 1
mov     rax, [rbp-58h]
cmp     rax, [rbp-80h]
jnb     short loc_40A38A
mov     rdx, [rbp-78h]
mov     rax, [rbp-58h]
add     rax, rdx
mov     byte ptr [rax], 5Ch
add     [rbp+len], 1
mov     rax, [rbp-58h]
cmp     rax, [rbp-80h]
jnb     short loc_40A3B0
mov     rdx, [rbp-78h]
mov     rax, [rbp-58h]
add     rax, rdx
movzx   edx, byte ptr [rbp-6Ah]
shr     dl, 6
add     edx, 30h
mov     [rax], dl
add     [rbp+len], 1
mov     rax, [rbp-58h]
cmp     rax, [rbp-80h]
jnb     short loc_40A3D9
mov     rdx, [rbp-78h]
mov     rax, [rbp-58h]
add     rax, rdx
movzx   edx, byte ptr [rbp-6Ah]
shr     dl, 3
and     edx, 7
add     edx, 30h
mov     [rax], dl
add     [rbp+len], 1
movzx   eax, byte ptr [rbp-6Ah]
and     eax, 7
add     eax, 30h
mov     [rbp+c], al
jmp     short loc_40A414
cmp     [rbp+is_right_quote], 0
jz      short loc_40A414
mov     rax, [rbp-58h]
cmp     rax, [rbp-80h]
jnb     short loc_40A40B
mov     rdx, [rbp-78h]
mov     rax, [rbp-58h]
add     rax, rdx
mov     byte ptr [rax], 5Ch
add     [rbp+len], 1
mov     [rbp+is_right_quote], 0
mov     rax, [rbp-60h]
add     rax, 1
cmp     rax, [rbp-28h]
jnb     loc_40A4B3
cmp     [rbp+pending_shell_escape_end], 0
jz      short loc_40A475
movzx   eax, byte ptr [rbp-67h]
xor     eax, 1
test    al, al
jz      short loc_40A475
mov     rax, [rbp-58h]
cmp     rax, [rbp-80h]
jnb     short loc_40A44F
mov     rdx, [rbp-78h]
mov     rax, [rbp-58h]
add     rax, rdx
mov     byte ptr [rax], 27h
add     [rbp+len], 1
mov     rax, [rbp-58h]
cmp     rax, [rbp-80h]
jnb     short loc_40A46C
mov     rdx, [rbp-78h]
mov     rax, [rbp-58h]
add     rax, rdx
mov     byte ptr [rax], 27h
add     [rbp+len], 1
mov     [rbp+pending_shell_escape_end], 0
mov     rax, [rbp-58h]
cmp     rax, [rbp-80h]
jnb     short loc_40A490
mov     rdx, [rbp-78h]
mov     rax, [rbp-58h]
add     rdx, rax
movzx   eax, byte ptr [rbp-6Ah]
mov     [rdx], al
add     [rbp+len], 1
add     [rbp+i], 1
mov     rdx, [rbp-88h]
mov     rax, [rbp-60h]
add     rax, rdx
movzx   eax, byte ptr [rax]
mov     [rbp+c], al
jmp     loc_40A2DC
nop
jmp     store_c
nop
jmp     short loc_40A4CC
nop
jmp     short loc_40A4CC
nop
jmp     short loc_40A4CC
nop
jmp     short loc_40A4CC
nop
jmp     short loc_40A4CC
nop
jmp     short loc_40A4CC
nop
movzx   eax, byte ptr [rbp-6Dh]
xor     eax, 1
test    al, al
jnz     short loc_40A4E0
cmp     [rbp+quoting_style], 2
jnz     short loc_40A4EB
movzx   eax, byte ptr [rbp-6Ch]
xor     eax, 1
test    al, al
jnz     short loc_40A527
cmp     [rbp+quote_these_too], 0
jz      short loc_40A527
movzx   eax, byte ptr [rbp-6Ah]
shr     al, 5
movzx   eax, al
lea     rdx, [rax*4+0]
mov     rax, [rbp-0A0h]
add     rax, rdx
mov     edx, [rax]
movzx   eax, byte ptr [rbp-6Ah]
and     eax, 1Fh
mov     ecx, eax
shr     edx, cl
mov     eax, edx
and     eax, 1
test    eax, eax
jnz     short store_escape
movzx   eax, byte ptr [rbp-68h]
xor     eax, 1
test    al, al
jnz     loc_40A5D8
cmp     [rbp+elide_outer_quotes], 0
jnz     loc_40A715
mov     [rbp+escaping], 1
cmp     [rbp+quoting_style], 2
jnz     short loc_40A5B3
movzx   eax, byte ptr [rbp-6Bh]
xor     eax, 1
test    al, al
jz      short loc_40A5B3
mov     rax, [rbp-58h]
cmp     rax, [rbp-80h]
jnb     short loc_40A570
mov     rdx, [rbp-78h]
mov     rax, [rbp-58h]
add     rax, rdx
mov     byte ptr [rax], 27h
add     [rbp+len], 1
mov     rax, [rbp-58h]
cmp     rax, [rbp-80h]
jnb     short loc_40A58D
mov     rdx, [rbp-78h]
mov     rax, [rbp-58h]
add     rax, rdx
mov     byte ptr [rax], 24h
add     [rbp+len], 1
mov     rax, [rbp-58h]
cmp     rax, [rbp-80h]
jnb     short loc_40A5AA
mov     rdx, [rbp-78h]
mov     rax, [rbp-58h]
add     rax, rdx
mov     byte ptr [rax], 27h
add     [rbp+len], 1
mov     [rbp+pending_shell_escape_end], 1
mov     rax, [rbp-58h]
cmp     rax, [rbp-80h]
jnb     short loc_40A5CB
mov     rdx, [rbp-78h]
mov     rax, [rbp-58h]
add     rax, rdx
mov     byte ptr [rax], 5Ch
add     [rbp+len], 1
jmp     short store_c
nop
jmp     short store_c
nop
jmp     short store_c
nop
cmp     [rbp+pending_shell_escape_end], 0
jz      short loc_40A628
movzx   eax, byte ptr [rbp-67h]
xor     eax, 1
test    al, al
jz      short loc_40A628
mov     rax, [rbp-58h]
cmp     rax, [rbp-80h]
jnb     short loc_40A602
mov     rdx, [rbp-78h]
mov     rax, [rbp-58h]
add     rax, rdx
mov     byte ptr [rax], 27h
add     [rbp+len], 1
mov     rax, [rbp-58h]
cmp     rax, [rbp-80h]
jnb     short loc_40A61F
mov     rdx, [rbp-78h]
mov     rax, [rbp-58h]
add     rax, rdx
mov     byte ptr [rax], 27h
add     [rbp+len], 1
mov     [rbp+pending_shell_escape_end], 0
mov     rax, [rbp-58h]
cmp     rax, [rbp-80h]
jnb     short loc_40A643
mov     rdx, [rbp-78h]
mov     rax, [rbp-58h]
add     rdx, rax
movzx   eax, byte ptr [rbp-6Ah]
mov     [rdx], al
add     [rbp+len], 1
add     [rbp+i], 1
cmp     [rbp+argsize], 0FFFFFFFFFFFFFFFFh
jnz     short loc_40A66F
mov     rdx, [rbp-88h]
mov     rax, [rbp-60h]
add     rax, rdx
movzx   eax, byte ptr [rax]
test    al, al
setnz   al
jmp     short loc_40A67D
mov     rax, [rbp-60h]
cmp     rax, [rbp-90h]
setnz   al
test    al, al
jnz     loc_409C3E
cmp     [rbp+len], 0
jnz     short loc_40A69B
cmp     [rbp+quoting_style], 2
jnz     short loc_40A69B
cmp     [rbp+elide_outer_quotes], 0
jnz     short loc_40A718
cmp     [rbp+quote_string], 0
jz      short loc_40A6E2
movzx   eax, byte ptr [rbp-6Ch]
xor     eax, 1
test    al, al
jz      short loc_40A6E2
jmp     short loc_40A6D7
mov     rax, [rbp-58h]
cmp     rax, [rbp-80h]
jnb     short loc_40A6CD
mov     rdx, [rbp-78h]
mov     rax, [rbp-58h]
add     rdx, rax
mov     rax, [rbp-50h]
movzx   eax, byte ptr [rax]
mov     [rdx], al
add     [rbp+len], 1
add     [rbp+quote_string], 1
mov     rax, [rbp-50h]
movzx   eax, byte ptr [rax]
test    al, al
jnz     short loc_40A6AF
mov     rax, [rbp-58h]
cmp     rax, [rbp-80h]
jnb     short loc_40A6FA
mov     rdx, [rbp-78h]
mov     rax, [rbp-58h]
add     rax, rdx
mov     byte ptr [rax], 0
mov     rax, [rbp-58h]
jmp     short loc_40A77E
nop
jmp     short force_outer_quoting_style
nop
jmp     short force_outer_quoting_style
nop
jmp     short force_outer_quoting_style
nop
jmp     short force_outer_quoting_style
nop
jmp     short force_outer_quoting_style
nop
jmp     short force_outer_quoting_style
nop
jmp     short force_outer_quoting_style
nop
jmp     short force_outer_quoting_style
nop
cmp     [rbp+quoting_style], 2
jnz     short loc_40A732
cmp     [rbp+backslash_escapes], 0
jz      short loc_40A732
mov     [rbp+quoting_style], 4
mov     eax, [rbp-98h]
and     eax, 0FFFFFFFDh
mov     r8d, eax
mov     edi, [rbp-94h]
mov     rcx, [rbp-90h]
mov     rdx, [rbp-88h]
mov     rsi, [rbp-80h]
mov     rax, [rbp-78h]
sub     rsp, 8
push    [rbp+right_quote]
push    [rbp+left_quote]
push    0
mov     r9d, r8d
mov     r8d, edi
mov     rdi, rax
call    quotearg_buffer_restyled
add     rsp, 20h
mov     rbx, [rbp-18h]
xor     rbx, fs:28h
jz      short loc_40A792
call    ___stack_chk_fail
mov     rbx, [rbp-8]
leave
retn