push    rbp
mov     rbp, rsp
push    rbx
sub     rsp, 138h
mov     [rbp+haystack], rdi
mov     [rbp+needle], rsi
mov     [rbp+resultp], rdx
mov     rax, fs:28h
mov     [rbp+var_18], rax
xor     eax, eax
mov     rax, [rbp-130h]
mov     rdi, rax
call    mbslen
mov     [rbp+m], rax
mov     rax, 492492492492492h
cmp     [rbp+m], rax
ja      loc_40711B
mov     rax, [rbp-0F8h]
shl     rax, 3
lea     rdx, [rax*8+0]
sub     rdx, rax
mov     rax, rdx
cmp     rax, 0FAFh
ja      short loc_4070F8
mov     rax, [rbp-0F8h]
shl     rax, 3
lea     rdx, [rax*8+0]
sub     rdx, rax
mov     rax, rdx
add     rax, 10h
lea     rdx, [rax+0Fh]
mov     eax, 10h
sub     rax, 1
add     rax, rdx
mov     ebx, 10h
mov     edx, 0
div     rbx
imul    rax, 10h
sub     rsp, rax
mov     rax, rsp
add     rax, 0Fh
shr     rax, 4
shl     rax, 4
add     rax, 10h
jmp     short loc_407120
mov     rax, [rbp-0F8h]
shl     rax, 3
lea     rdx, [rax*8+0]
sub     rdx, rax
mov     rax, rdx
mov     rdi, rax
call    mmalloca
jmp     short loc_407120
mov     eax, 0
mov     [rbp+memory], rax
cmp     [rbp+memory], 0
jnz     short loc_40713B
mov     eax, 0
jmp     loc_40780F
mov     rax, [rbp-0F0h]
mov     [rbp+needle_mbchars], rax
mov     rdx, [rbp-0F8h]
mov     rax, rdx
add     rax, rax
add     rax, rdx
shl     rax, 4
mov     rdx, rax
mov     rax, [rbp-0F0h]
add     rax, rdx
mov     [rbp+table], rax
mov     [rbp+j], 0
mov     rax, [rbp-130h]
mov     [rbp+phaystack.cur.ptr], rax
mov     [rbp+phaystack.in_shift], 0
lea     rax, [rbp-60h]
add     rax, 4
mov     edx, 8
mov     esi, 0
mov     rdi, rax
call    _memset
mov     [rbp+phaystack.next_done], 0
jmp     loc_407276
mov     rdx, [rbp-120h]
mov     rax, rdx
add     rax, rax
add     rax, rdx
shl     rax, 4
mov     rdx, rax
mov     rax, [rbp-0E8h]
add     rax, rdx
lea     rdx, [rbp-60h]
add     rdx, 10h
mov     rsi, rdx
mov     rdi, rax
call    mb_copy
mov     rdx, [rbp-120h]
mov     rax, rdx
add     rax, rax
add     rax, rdx
shl     rax, 4
mov     rdx, rax
mov     rax, [rbp-0E8h]
add     rax, rdx
movzx   eax, byte ptr [rax+10h]
test    al, al
jz      short loc_40725B
mov     rdx, [rbp-120h]
mov     rax, rdx
add     rax, rax
add     rax, rdx
shl     rax, 4
mov     rdx, rax
mov     rax, [rbp-0E8h]
lea     rbx, [rdx+rax]
mov     rdx, [rbp-120h]
mov     rax, rdx
add     rax, rax
add     rax, rdx
shl     rax, 4
mov     rdx, rax
mov     rax, [rbp-0E8h]
add     rax, rdx
mov     eax, [rax+14h]
mov     edi, eax
call    _towlower
mov     [rbx+14h], eax
mov     rdx, [rbp-50h]
mov     rax, [rbp-48h]
add     rax, rdx
mov     [rbp+phaystack.cur.ptr], rax
mov     [rbp+phaystack.next_done], 0
add     [rbp+j], 1
lea     rax, [rbp-60h]
mov     rdi, rax
call    mbuiter_multi_next
movzx   eax, byte ptr [rbp-40h]
xor     eax, 1
test    al, al
jnz     short loc_407294
mov     eax, [rbp-3Ch]
test    eax, eax
jz      short loc_40729B
mov     eax, 1
jmp     short loc_4072A0
mov     eax, 0
test    eax, eax
jnz     loc_4071AE
mov     rax, [rbp-0E0h]
add     rax, 8
mov     qword ptr [rax], 1
mov     [rbp+j_0], 0
mov     [rbp+i], 2
jmp     loc_407494
mov     rdx, [rbp-118h]
mov     rax, rdx
add     rax, rax
add     rax, rdx
shl     rax, 4
lea     rdx, [rax-30h]
mov     rax, [rbp-0E8h]
add     rax, rdx
mov     [rbp+b], rax
mov     rax, [rbp-0D8h]
movzx   eax, byte ptr [rax+10h]
test    al, al
jz      short loc_40736E
mov     rdx, [rbp-110h]
mov     rax, rdx
add     rax, rax
add     rax, rdx
shl     rax, 4
mov     rdx, rax
mov     rax, [rbp-0E8h]
add     rax, rdx
movzx   eax, byte ptr [rax+10h]
test    al, al
jz      short loc_40736E
mov     rax, [rbp-0D8h]
mov     ecx, [rax+14h]
mov     rdx, [rbp-110h]
mov     rax, rdx
add     rax, rax
add     rax, rdx
shl     rax, 4
mov     rdx, rax
mov     rax, [rbp-0E8h]
add     rax, rdx
mov     eax, [rax+14h]
cmp     ecx, eax
setz    al
jmp     loc_4073FD
mov     rax, [rbp-0D8h]
mov     rcx, [rax+8]
mov     rdx, [rbp-110h]
mov     rax, rdx
add     rax, rax
add     rax, rdx
shl     rax, 4
mov     rdx, rax
mov     rax, [rbp-0E8h]
add     rax, rdx
mov     rax, [rax+8]
cmp     rcx, rax
jnz     short loc_4073F5
mov     rax, [rbp-0D8h]
mov     rsi, [rax+8]
mov     rdx, [rbp-110h]
mov     rax, rdx
add     rax, rax
add     rax, rdx
shl     rax, 4
mov     rdx, rax
mov     rax, [rbp-0E8h]
add     rax, rdx
mov     rcx, [rax]
mov     rax, [rbp-0D8h]
mov     rax, [rax]
mov     rdx, rsi
mov     rsi, rcx
mov     rdi, rax
call    _memcmp
test    eax, eax
jnz     short loc_4073F5
mov     eax, 1
jmp     short loc_4073FA
mov     eax, 0
and     eax, 1
test    al, al
jz      short loc_407435
mov     rax, [rbp-118h]
lea     rdx, [rax*8+0]
mov     rax, [rbp-0E0h]
add     rdx, rax
add     [rbp+j_0], 1
mov     rax, [rbp-118h]
sub     rax, [rbp-110h]
mov     [rdx], rax
jmp     short loc_40748C
cmp     [rbp+j_0], 0
jnz     short loc_407464
mov     rax, [rbp-118h]
lea     rdx, [rax*8+0]
mov     rax, [rbp-0E0h]
add     rdx, rax
mov     rax, [rbp-118h]
mov     [rdx], rax
jmp     short loc_40748C
mov     rax, [rbp-110h]
lea     rdx, [rax*8+0]
mov     rax, [rbp-0E0h]
add     rax, rdx
mov     rax, [rax]
sub     [rbp+j_0], rax
jmp     loc_4072FE
add     [rbp+i], 1
mov     rax, [rbp-118h]
cmp     rax, [rbp-0F8h]
jb      loc_4072D5
mov     rax, [rbp-138h]
mov     qword ptr [rax], 0
mov     [rbp+j_1], 0
mov     rax, [rbp-128h]
mov     [rbp+rhaystack.cur.ptr], rax
mov     [rbp+rhaystack.in_shift], 0
lea     rax, [rbp-0A0h]
add     rax, 4
mov     edx, 8
mov     esi, 0
mov     rdi, rax
call    _memset
mov     [rbp+rhaystack.next_done], 0
mov     rax, [rbp-128h]
mov     [rbp+phaystack.cur.ptr], rax
mov     [rbp+phaystack.in_shift], 0
lea     rax, [rbp-60h]
add     rax, 4
mov     edx, 8
mov     esi, 0
mov     rdi, rax
call    _memset
mov     [rbp+phaystack.next_done], 0
jmp     loc_4077C9
lea     rax, [rbp-60h]
lea     rdx, [rax+10h]
lea     rax, [rbp-0D0h]
mov     rsi, rdx
mov     rdi, rax
call    mb_copy
movzx   eax, byte ptr [rbp-0C0h]
test    al, al
jz      short loc_407564
mov     eax, [rbp-0BCh]
mov     edi, eax
call    _towlower
mov     [rbp+c.wc], eax
mov     rdx, [rbp-108h]
mov     rax, rdx
add     rax, rax
add     rax, rdx
shl     rax, 4
mov     rdx, rax
mov     rax, [rbp-0E8h]
add     rax, rdx
movzx   eax, byte ptr [rax+10h]
test    al, al
jz      short loc_4075CC
movzx   eax, byte ptr [rbp-0C0h]
test    al, al
jz      short loc_4075CC
mov     rdx, [rbp-108h]
mov     rax, rdx
add     rax, rax
add     rax, rdx
shl     rax, 4
mov     rdx, rax
mov     rax, [rbp-0E8h]
add     rax, rdx
mov     edx, [rax+14h]
mov     eax, [rbp-0BCh]
cmp     edx, eax
setz    al
jmp     loc_40766E
mov     rdx, [rbp-108h]
mov     rax, rdx
add     rax, rax
add     rax, rdx
shl     rax, 4
mov     rdx, rax
mov     rax, [rbp-0E8h]
add     rax, rdx
mov     rdx, [rax+8]
mov     rax, [rbp-0C8h]
cmp     rdx, rax
jnz     short loc_407666
mov     rdx, [rbp-108h]
mov     rax, rdx
add     rax, rax
add     rax, rdx
shl     rax, 4
mov     rdx, rax
mov     rax, [rbp-0E8h]
add     rax, rdx
mov     rsi, [rax+8]
mov     rcx, [rbp-0D0h]
mov     rdx, [rbp-108h]
mov     rax, rdx
add     rax, rax
add     rax, rdx
shl     rax, 4
mov     rdx, rax
mov     rax, [rbp-0E8h]
add     rax, rdx
mov     rax, [rax]
mov     rdx, rsi
mov     rsi, rcx
mov     rdi, rax
call    _memcmp
test    eax, eax
jnz     short loc_407666
mov     eax, 1
jmp     short loc_40766B
mov     eax, 0
and     eax, 1
test    al, al
jz      short loc_4076B7
add     [rbp+j_1], 1
mov     rdx, [rbp-50h]
mov     rax, [rbp-48h]
add     rax, rdx
mov     [rbp+phaystack.cur.ptr], rax
mov     [rbp+phaystack.next_done], 0
mov     rax, [rbp-108h]
cmp     rax, [rbp-0F8h]
jnz     loc_4077C9
mov     rdx, [rbp-90h]
mov     rax, [rbp-138h]
mov     [rax], rdx
jmp     loc_4077FB
cmp     [rbp+j_1], 0
jz      loc_407761
mov     rax, [rbp-108h]
lea     rdx, [rax*8+0]
mov     rax, [rbp-0E0h]
add     rax, rdx
mov     rax, [rax]
mov     [rbp+count], rax
mov     rax, [rbp-100h]
sub     [rbp+j_1], rax
jmp     short loc_407755
lea     rax, [rbp-0A0h]
mov     rdi, rax
call    mbuiter_multi_next
movzx   eax, byte ptr [rbp-80h]
xor     eax, 1
test    al, al
jnz     short loc_407719
mov     eax, [rbp-7Ch]
test    eax, eax
jz      short loc_407720
mov     eax, 1
jmp     short loc_407725
mov     eax, 0
test    eax, eax
jnz     short loc_40772E
call    _abort
mov     rdx, [rbp-90h]
mov     rax, [rbp-88h]
add     rax, rdx
mov     [rbp+rhaystack.cur.ptr], rax
mov     [rbp+rhaystack.next_done], 0
sub     [rbp+count], 1
cmp     [rbp+count], 0
jnz     short loc_4076F8
jmp     short loc_4077C9
lea     rax, [rbp-0A0h]
mov     rdi, rax
call    mbuiter_multi_next
movzx   eax, byte ptr [rbp-80h]
xor     eax, 1
test    al, al
jnz     short loc_407782
mov     eax, [rbp-7Ch]
test    eax, eax
jz      short loc_407789
mov     eax, 1
jmp     short loc_40778E
mov     eax, 0
test    eax, eax
jnz     short loc_407797
call    _abort
mov     rdx, [rbp-90h]
mov     rax, [rbp-88h]
add     rax, rdx
mov     [rbp+rhaystack.cur.ptr], rax
mov     [rbp+rhaystack.next_done], 0
mov     rdx, [rbp-50h]
mov     rax, [rbp-48h]
add     rax, rdx
mov     [rbp+phaystack.cur.ptr], rax
mov     [rbp+phaystack.next_done], 0
lea     rax, [rbp-60h]
mov     rdi, rax
call    mbuiter_multi_next
movzx   eax, byte ptr [rbp-40h]
xor     eax, 1
test    al, al
jnz     short loc_4077E7
mov     eax, [rbp-3Ch]
test    eax, eax
jz      short loc_4077EE
mov     eax, 1
jmp     short loc_4077F3
mov     eax, 0
test    eax, eax
jnz     loc_40752C
mov     rax, [rbp-0F0h]
mov     rdi, rax
call    freea
mov     eax, 1
mov     rbx, [rbp-18h]
xor     rbx, fs:28h
jz      short loc_407823
call    ___stack_chk_fail
mov     rbx, [rbp-8]
leave
retn