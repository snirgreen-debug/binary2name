push    rbp
mov     rbp, rsp
sub     rsp, 20h
mov     rax, cs:linebuf
mov     [rbp+p], rax
mov     rax, cs:linebuf
mov     rcx, cs:bc_ctl.arg_max
mov     rdx, cs:bc_state.cmd_initial_argv_chars
sub     rcx, rdx
mov     rdx, rcx
sub     rdx, 1
add     rax, rdx
mov     [rbp+endbuf], rax
movzx   eax, cs:eof_5729
test    al, al
jz      short loc_403789
mov     eax, 0FFFFFFFFh
jmp     locret_403915
mov     rax, cs:input_stream
mov     rdi, rax
call    __IO_getc
mov     [rbp+c], eax
cmp     [rbp+c], 0FFFFFFFFh
jnz     loc_403838
mov     cs:eof_5729, 1
mov     rax, cs:linebuf
cmp     [rbp+p], rax
jnz     short loc_4037C3
mov     eax, 0FFFFFFFFh
jmp     locret_403915
mov     rax, [rbp-10h]
lea     rdx, [rax+1]
mov     [rbp+p], rdx
mov     byte ptr [rax], 0
mov     rax, [rbp-10h]
mov     rdx, cs:linebuf
sub     rax, rdx
mov     [rbp+len], eax
mov     rax, cs:bc_ctl.replace_pat
test    rax, rax
jnz     short loc_403830
movzx   eax, cs:initial_args
movzx   ecx, al
mov     eax, [rbp-14h]
movsxd  rdx, eax
mov     rax, cs:linebuf
sub     rsp, 8
push    rcx
mov     r9d, 0
mov     r8d, 0
mov     rcx, rdx
mov     rdx, rax
mov     esi, 611400h
mov     edi, 611460h
call    bc_push_arg
add     rsp, 10h
mov     eax, [rbp-14h]
jmp     locret_403915
movzx   eax, cs:input_delimiter
movsx   eax, al
cmp     eax, [rbp-18h]
jnz     loc_4038CF
mov     rax, cs:lineno
add     rax, 1
mov     cs:lineno, rax
mov     rax, [rbp-10h]
lea     rdx, [rax+1]
mov     [rbp+p], rdx
mov     byte ptr [rax], 0
mov     rax, [rbp-10h]
mov     rdx, cs:linebuf
sub     rax, rdx
mov     [rbp+len], eax
mov     rax, cs:bc_ctl.replace_pat
test    rax, rax
jnz     short loc_4038CA
movzx   eax, cs:initial_args
movzx   ecx, al
mov     eax, [rbp-14h]
movsxd  rdx, eax
mov     rax, cs:linebuf
sub     rsp, 8
push    rcx
mov     r9d, 0
mov     r8d, 0
mov     rcx, rdx
mov     rdx, rax
mov     esi, 611400h
mov     edi, 611460h
call    bc_push_arg
add     rsp, 10h
mov     eax, [rbp-14h]
jmp     short locret_403915
mov     rax, [rbp-10h]
cmp     rax, [rbp-8]
jb      short loc_4038FF
call    exec_if_possible
mov     edi, 40CABBh
call    _gettext
mov     rdx, rax
mov     esi, 0
mov     edi, 1
mov     eax, 0
call    _error
mov     rax, [rbp-10h]
lea     rdx, [rax+1]
mov     [rbp+p], rdx
mov     edx, [rbp-18h]
mov     [rax], dl
jmp     loc_403789
leave
retn