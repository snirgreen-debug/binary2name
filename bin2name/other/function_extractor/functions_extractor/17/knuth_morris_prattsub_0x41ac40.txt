push    rbp
mov     rbp, rsp
sub     rsp, 70h
mov     [rbp+haystack], rdi
mov     [rbp+needle], rsi
mov     [rbp+needle_len], rdx
mov     [rbp+resultp], rcx
mov     rax, fs:28h
mov     [rbp+var_8], rax
xor     eax, eax
mov     rax, [rbp-68h]
mov     [rbp+m], rax
mov     rax, 1FFFFFFFFFFFFFFFh
cmp     [rbp+m], rax
ja      short loc_41ACE6
mov     rax, [rbp-18h]
shl     rax, 3
cmp     rax, 0FAFh
ja      short loc_41ACD4
mov     rax, [rbp-18h]
add     rax, 2
shl     rax, 3
lea     rdx, [rax+0Fh]
mov     eax, 10h
sub     rax, 1
add     rax, rdx
mov     esi, 10h
mov     edx, 0
div     rsi
imul    rax, 10h
sub     rsp, rax
mov     rax, rsp
add     rax, 0Fh
shr     rax, 4
shl     rax, 4
add     rax, 10h
jmp     short loc_41ACEB
mov     rax, [rbp-18h]
shl     rax, 3
mov     rdi, rax
call    mmalloca
jmp     short loc_41ACEB
mov     eax, 0
mov     [rbp+table], rax
cmp     [rbp+table], 0
jnz     short loc_41AD00
mov     eax, 0
jmp     loc_41AE8C
mov     rax, [rbp-10h]
add     rax, 8
mov     qword ptr [rax], 1
mov     [rbp+j], 0
mov     [rbp+i], 2
jmp     loc_41ADB5
mov     rax, [rbp-40h]
lea     rdx, [rax-1]
mov     rax, [rbp-60h]
add     rax, rdx
movzx   eax, byte ptr [rax]
mov     [rbp+b], al
mov     rdx, [rbp-60h]
mov     rax, [rbp-38h]
add     rax, rdx
movzx   eax, byte ptr [rax]
cmp     al, [rbp-41h]
jnz     short loc_41AD71
mov     rax, [rbp-40h]
lea     rdx, [rax*8+0]
mov     rax, [rbp-10h]
add     rdx, rax
add     [rbp+j], 1
mov     rax, [rbp-40h]
sub     rax, [rbp-38h]
mov     [rdx], rax
jmp     short loc_41ADB0
cmp     [rbp+j], 0
jnz     short loc_41AD94
mov     rax, [rbp-40h]
lea     rdx, [rax*8+0]
mov     rax, [rbp-10h]
add     rdx, rax
mov     rax, [rbp-40h]
mov     [rdx], rax
jmp     short loc_41ADB0
mov     rax, [rbp-38h]
lea     rdx, [rax*8+0]
mov     rax, [rbp-10h]
add     rax, rdx
mov     rax, [rax]
sub     [rbp+j], rax
jmp     short loc_41AD39
add     [rbp+i], 1
mov     rax, [rbp-40h]
cmp     rax, [rbp-18h]
jb      loc_41AD24
mov     rax, [rbp-70h]
mov     qword ptr [rax], 0
mov     [rbp+j_0], 0
mov     rax, [rbp-58h]
mov     [rbp+rhaystack], rax
mov     rax, [rbp-58h]
mov     [rbp+phaystack], rax
jmp     loc_41AE6C
mov     rdx, [rbp-60h]
mov     rax, [rbp-30h]
add     rax, rdx
movzx   edx, byte ptr [rax]
mov     rax, [rbp-20h]
movzx   eax, byte ptr [rax]
cmp     dl, al
jnz     short loc_41AE25
add     [rbp+j_0], 1
add     [rbp+phaystack], 1
mov     rax, [rbp-30h]
cmp     rax, [rbp-18h]
jnz     short loc_41AE6C
mov     rax, [rbp-70h]
mov     rdx, [rbp-28h]
mov     [rax], rdx
jmp     short loc_41AE7B
cmp     [rbp+j_0], 0
jz      short loc_41AE62
mov     rax, [rbp-30h]
lea     rdx, [rax*8+0]
mov     rax, [rbp-10h]
add     rax, rdx
mov     rax, [rax]
add     [rbp+rhaystack], rax
mov     rax, [rbp-30h]
lea     rdx, [rax*8+0]
mov     rax, [rbp-10h]
add     rax, rdx
mov     rax, [rax]
sub     [rbp+j_0], rax
jmp     short loc_41AE6C
add     [rbp+rhaystack], 1
add     [rbp+phaystack], 1
mov     rax, [rbp-20h]
movzx   eax, byte ptr [rax]
test    al, al
jnz     loc_41ADEB
mov     rax, [rbp-10h]
mov     rdi, rax
call    freea
mov     eax, 1
mov     rcx, [rbp-8]
xor     rcx, fs:28h
jz      short locret_41AEA0
call    ___stack_chk_fail
leave
retn