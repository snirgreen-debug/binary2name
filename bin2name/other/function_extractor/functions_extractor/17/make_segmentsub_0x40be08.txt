push    rbp
mov     rbp, rsp
push    rbx
sub     rsp, 38h
mov     [rbp+segment], rdi
mov     [rbp+format], rsi
mov     [rbp+len], edx
mov     [rbp+kind], ecx
mov     edx, r8d
mov     eax, r9d
mov     [rbp+format_char], dl
mov     [rbp+aux_format_char], al
mov     [rbp+mycost], 0
cmp     [rbp+format_char], 7Bh
jnz     short loc_40BE51
mov     ecx, 42D1F0h
mov     edx, 59h
mov     esi, 42C690h
mov     edi, 42C698h
call    ___assert_fail
cmp     [rbp+format_char], 5Bh
jnz     short loc_40BE70
mov     ecx, 42D1F0h
mov     edx, 5Ah
mov     esi, 42C690h
mov     edi, 42C6ABh
call    ___assert_fail
cmp     [rbp+format_char], 28h
jnz     short loc_40BE8F
mov     ecx, 42D1F0h
mov     edx, 5Bh
mov     esi, 42C690h
mov     edi, 42C6BEh
call    ___assert_fail
mov     edi, 20h
call    xmalloc
mov     rdx, rax
mov     rax, [rbp-28h]
mov     [rax], rdx
mov     rax, [rbp-28h]
mov     rax, [rax]
mov     edx, [rbp-38h]
mov     [rax], edx
mov     rax, [rbp-28h]
mov     rax, [rax]
movzx   edx, byte ptr [rbp-3Ch]
mov     [rax+4], dl
mov     rax, [rbp-28h]
mov     rax, [rax]
movzx   edx, byte ptr [rbp-40h]
mov     [rax+5], dl
mov     rax, [rbp-28h]
mov     rax, [rax]
mov     qword ptr [rax+18h], 0
mov     rax, [rbp-28h]
mov     rax, [rax]
mov     edx, [rbp-34h]
mov     [rax+10h], edx
mov     rax, [rbp-28h]
mov     rbx, [rax]
mov     eax, [rbp-34h]
cdqe
add     rax, 2
mov     rdi, rax
call    xmalloc
mov     [rbx+8], rax
mov     rax, [rbx+8]
mov     [rbp+fmt], rax
mov     eax, [rbp-34h]
movsxd  rdx, eax
mov     rcx, [rbp-30h]
mov     rax, [rbp-18h]
mov     rsi, rcx
mov     rdi, rax
call    _strncpy
mov     eax, [rbp-34h]
cdqe
add     [rbp+fmt], rax
cmp     [rbp+kind], 0
jz      short loc_40BF39
cmp     [rbp+kind], 1
jnz     short loc_40BFA5
cmp     [rbp+format_char], 0
jz      short loc_40BF58
mov     ecx, 42D1F0h
mov     edx, 6Ch
mov     esi, 42C690h
mov     edi, 42C6D1h
call    ___assert_fail
cmp     [rbp+aux_format_char], 0
jz      short loc_40BF77
mov     ecx, 42D1F0h
mov     edx, 6Dh
mov     esi, 42C690h
mov     edi, 42C6E2h
call    ___assert_fail
mov     rax, [rbp-18h]
mov     byte ptr [rax], 0
mov     rax, [rbp+10h]
mov     eax, [rax+20h]
cmp     eax, [rbp-1Ch]
jnb     short loc_40BF95
mov     rax, [rbp+10h]
mov     dword ptr [rax+20h], 0
mov     rax, [rbp-28h]
mov     rax, [rax]
add     rax, 18h
jmp     loc_40C178
cmp     [rbp+kind], 2
jz      short loc_40BFC4
mov     ecx, 42D1F0h
mov     edx, 74h
mov     esi, 42C690h
mov     edi, 42C6F7h
call    ___assert_fail
movsx   eax, byte ptr [rbp-3Ch]
sub     eax, 25h
cmp     eax, 54h
ja      def_40BFDE
mov     eax, eax
mov     rax, [rax*8+42C710h]
jmp     rax
mov     rax, [rbp-18h]
lea     rdx, [rax+1]
mov     [rbp+fmt], rdx
mov     byte ptr [rax], 25h
jmp     def_40BFDE
mov     rax, [rbp+10h]
mov     byte ptr [rax+1Ah], 1
mov     [rbp+mycost], 4
mov     rax, [rbp-18h]
lea     rdx, [rax+1]
mov     [rbp+fmt], rdx
mov     byte ptr [rax], 73h
jmp     def_40BFDE
mov     rax, [rbp+10h]
mov     byte ptr [rax+1Bh], 1
mov     [rbp+mycost], 2
mov     rax, [rbp-18h]
lea     rdx, [rax+1]
mov     [rbp+fmt], rdx
mov     byte ptr [rax], 73h
jmp     def_40BFDE
mov     rax, [rbp+10h]
mov     byte ptr [rax+1Ch], 1
mov     [rbp+mycost], 1
mov     rax, [rbp-18h]
lea     rdx, [rax+1]
mov     [rbp+fmt], rdx
mov     byte ptr [rax], 73h
jmp     def_40BFDE
mov     rax, [rbp+10h]
mov     byte ptr [rax+1Ah], 1
mov     [rbp+mycost], 3
mov     rax, [rbp-18h]
lea     rdx, [rax+1]
mov     [rbp+fmt], rdx
mov     byte ptr [rax], 73h
jmp     def_40BFDE
mov     rax, [rbp+10h]
mov     byte ptr [rax+1Ah], 1
mov     [rbp+mycost], 3
mov     rax, [rbp-18h]
lea     rdx, [rax+1]
mov     [rbp+fmt], rdx
mov     byte ptr [rax], 67h
jmp     def_40BFDE
mov     rax, [rbp+10h]
mov     byte ptr [rax+1Ah], 1
mov     [rbp+mycost], 2
mov     rax, [rbp-18h]
lea     rdx, [rax+1]
mov     [rbp+fmt], rdx
mov     byte ptr [rax], 73h
jmp     def_40BFDE
mov     rax, [rbp-18h]
lea     rdx, [rax+1]
mov     [rbp+fmt], rdx
mov     byte ptr [rax], 73h
jmp     short def_40BFDE
mov     [rbp+mycost], 5
mov     rax, [rbp-18h]
lea     rdx, [rax+1]
mov     [rbp+fmt], rdx
mov     byte ptr [rax], 73h
jmp     short def_40BFDE
mov     rax, [rbp-18h]
lea     rdx, [rax+1]
mov     [rbp+fmt], rdx
mov     byte ptr [rax], 73h
jmp     short def_40BFDE
mov     rax, [rbp+10h]
mov     byte ptr [rax+1Ah], 1
mov     [rbp+mycost], 3
mov     rax, [rbp-18h]
lea     rdx, [rax+1]
mov     [rbp+fmt], rdx
mov     byte ptr [rax], 73h
jmp     short def_40BFDE
mov     rax, [rbp-18h]
lea     rdx, [rax+1]
mov     [rbp+fmt], rdx
mov     byte ptr [rax], 64h
jmp     short def_40BFDE
mov     rax, [rbp-18h]
lea     rdx, [rax+1]
mov     [rbp+fmt], rdx
mov     byte ptr [rax], 6Fh
mov     rax, [rbp+10h]
mov     byte ptr [rax+1Ah], 1
mov     [rbp+mycost], 3
nop
mov     rax, [rbp-18h]
mov     byte ptr [rax], 0
mov     rax, [rbp+10h]
mov     eax, [rax+20h]
cmp     eax, [rbp-1Ch]
jnb     short loc_40C16D
mov     rax, [rbp+10h]
mov     edx, [rbp-1Ch]
mov     [rax+20h], edx
mov     rax, [rbp-28h]
mov     rax, [rax]
add     rax, 18h
add     rsp, 38h
pop     rbx
pop     rbp
retn