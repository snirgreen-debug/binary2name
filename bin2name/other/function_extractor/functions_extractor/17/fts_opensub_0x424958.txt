push    rbp
mov     rbp, rsp
push    nitems
push    options
push    root
push    p
push    sp_0
sub     rsp, 48h
mov     [rbp+argv], rdi
mov     r14d, esi
mov     [rbp+compar], rdx
mov     [rbp+parent], 0
mov     [rbp+tmp], 0
mov     eax, r14d
and     eax, 0FFFFE000h
test    eax, eax
jz      short loc_4249A5
call    ___errno_location
mov     dword ptr [rax], 16h
mov     eax, 0
jmp     loc_424D05
mov     eax, r14d
and     eax, 4
test    eax, eax
jz      short loc_4249D0
mov     eax, r14d
and     eax, 200h
test    eax, eax
jz      short loc_4249D0
call    ___errno_location
mov     dword ptr [rax], 16h
mov     eax, 0
jmp     loc_424D05
mov     eax, r14d
and     eax, 12h
test    eax, eax
jnz     short loc_4249EF
call    ___errno_location
mov     dword ptr [rax], 16h
mov     eax, 0
jmp     loc_424D05
mov     edi, 80h
call    _malloc
mov     sp_0, rax
test    sp_0, sp_0
jnz     short loc_424A0B
mov     eax, 0
jmp     loc_424D05
mov     edx, 80h
mov     esi, 0
mov     rdi, sp_0
call    _memset
mov     rax, [rbp-70h]
mov     [sp_0+40h], rax
mov     [sp_0+48h], r14d
mov     eax, [sp_0+48h]
and     eax, 2
test    eax, eax
jz      short loc_424A45
mov     eax, [sp_0+48h]
or      eax, 4
mov     [sp_0+48h], eax
mov     eax, [sp_0+48h]
and     ah, 0FDh
mov     [sp_0+48h], eax
mov     dword ptr [sp_0+2Ch], 0FFFFFF9Ch
mov     rax, [rbp-68h]
mov     rdi, rax
call    fts_maxarglen
mov     [rbp+maxarglen], rax
mov     eax, 1000h
cmp     [rbp+maxarglen], 1000h
cmovnb  rax, [rbp-40h]
mov     rsi, rax
mov     rdi, sp_0
call    fts_palloc
xor     eax, 1
test    al, al
jnz     loc_424CF7
mov     rax, [rbp-68h]
mov     rax, [rax]
test    rax, rax
jz      short loc_424ABD
mov     edx, 0
mov     esi, 432638h
mov     rdi, sp_0
call    fts_alloc
mov     [rbp+parent], rax
cmp     [rbp+parent], 0
jz      loc_424CE8
mov     rax, [rbp-58h]
mov     qword ptr [rax+58h], 0FFFFFFFFFFFFFFFFh
cmp     [rbp+compar], 0
jz      short loc_424AD0
mov     eax, [sp_0+48h]
and     eax, 400h
test    eax, eax
jz      short loc_424AD7
mov     eax, 1
jmp     short loc_424ADC
mov     eax, 0
mov     [rbp+defer_stat], al
and     [rbp+defer_stat], 1
mov     r13d, 0
mov     r15d, 0
jmp     loc_424C15
mov     rax, [rbp-68h]
mov     rax, [rax]
mov     rdi, rax
call    _strlen
mov     [rbp+len], rax
mov     eax, r14d
and     eax, 1000h
test    eax, eax
jnz     short loc_424B5F
mov     rax, [rbp-68h]
mov     rax, [rax]
mov     [rbp+v], rax
cmp     [rbp+len], 2
jbe     short loc_424B5F
mov     rax, [rbp-48h]
lea     rdx, [rax-1]
mov     rax, [rbp-38h]
add     rax, rdx
movzx   eax, byte ptr [rax]
cmp     al, 2Fh
jnz     short loc_424B5F
jmp     short loc_424B42
sub     [rbp+len], 1
cmp     [rbp+len], 1
jbe     short loc_424B5F
mov     rax, [rbp-48h]
lea     rdx, [rax-2]
mov     rax, [rbp-38h]
add     rax, rdx
movzx   eax, byte ptr [rax]
cmp     al, 2Fh
jz      short loc_424B3D
mov     rax, [rbp-68h]
mov     rax, [rax]
mov     rdx, [rbp-48h]
mov     rsi, rax
mov     rdi, sp_0
call    fts_alloc
mov     p, rax
test    p, p
jz      loc_424CCB
mov     qword ptr [p+58h], 0
mov     rax, [rbp-58h]
mov     [p+8], rax
lea     rax, [p+108h]
mov     [p+30h], rax
cmp     [rbp+defer_stat], 0
jz      short loc_424BC2
test    root, root
jz      short loc_424BC2
mov     word ptr [p+70h], 0Bh
mov     esi, 1
mov     rdi, p
call    fts_set_stat_required
jmp     short loc_424BD8
mov     edx, 0
mov     rsi, p
mov     rdi, sp_0
call    fts_stat
mov     [p+70h], ax
cmp     [rbp+compar], 0
jz      short loc_424BE9
mov     [p+10h], root
mov     root, p
jmp     short loc_424C0C
mov     qword ptr [p+10h], 0
test    root, root
jnz     short loc_424C00
mov     root, p
mov     [rbp+tmp], root
jmp     short loc_424C0C
mov     rax, [rbp-50h]
mov     [rax+10h], p
mov     [rbp+tmp], p
add     [rbp+argv], 8
add     nitems, 1
mov     rax, [rbp-68h]
mov     rax, [rax]
test    rax, rax
jnz     loc_424AF4
cmp     [rbp+compar], 0
jz      short loc_424C43
cmp     nitems, 1
jbe     short loc_424C43
mov     rdx, nitems
mov     rsi, root
mov     rdi, sp_0
call    fts_sort
mov     root, rax
mov     edx, 0
mov     esi, 432638h
mov     rdi, sp_0
call    fts_alloc
mov     [sp_0], rax
mov     rax, [sp_0]
test    rax, rax
jz      short loc_424CCE
mov     rax, [sp_0]
mov     [rax+10h], root
mov     rax, [sp_0]
mov     word ptr [rax+70h], 9
mov     rdi, sp_0
call    setup_dir
xor     eax, 1
test    al, al
jnz     short loc_424CD1
mov     eax, [sp_0+48h]
and     eax, 4
test    eax, eax
jnz     short loc_424CB5
mov     eax, [sp_0+48h]
and     eax, 200h
test    eax, eax
jnz     short loc_424CB5
mov     esi, 432639h
mov     rdi, sp_0
call    diropen
mov     [sp_0+28h], eax
mov     eax, [sp_0+28h]
test    eax, eax
jns     short loc_424CB5
mov     eax, [sp_0+48h]
or      eax, 4
mov     [sp_0+48h], eax
lea     rax, [sp_0+60h]
mov     esi, 0FFFFFFFFh
mov     rdi, rax
call    i_ring_init
mov     rax, sp_0
jmp     short loc_424D05
nop
jmp     short mem3
nop
jmp     short mem3
nop
mov     rdi, root
call    fts_lfree
mov     rax, [rbp-58h]
mov     rdi, rax
call    _free
jmp     short mem2
nop
mov     rax, [sp_0+20h]
mov     rdi, rax
call    _free
jmp     short mem1
nop
mov     rdi, sp_0
call    _free
mov     eax, 0
add     rsp, 48h
pop     sp_0
pop     p
pop     root
pop     options
pop     nitems
pop     rbp
retn