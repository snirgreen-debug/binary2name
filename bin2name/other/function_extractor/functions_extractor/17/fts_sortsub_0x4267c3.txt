push    rbp
mov     rbp, rsp
push    p
push    nitems
push    ap
sub     rsp, 38h
mov     [rbp+sp_0], rdi
mov     [rbp+head], rsi
mov     nitems, rdx
mov     rax, fs:28h
mov     [rbp+var_28], rax
xor     eax, eax
mov     rax, [rbp-48h]
mov     rax, [rax+40h]
mov     [rbp+compare], rax
mov     rax, [rbp-48h]
mov     rax, [rax+38h]
cmp     rax, nitems
jnb     loc_426896
lea     rdx, [nitems+28h]
mov     rax, [rbp-48h]
mov     [rax+38h], rdx
mov     rax, [rbp-48h]
mov     rdx, [rax+38h]
mov     rax, 1FFFFFFFFFFFFFFFh
cmp     rdx, rax
ja      short loc_426859
mov     rax, [rbp-48h]
mov     rax, [rax+38h]
lea     rdx, [rax*8+0]
mov     rax, [rbp-48h]
mov     rax, [rax+10h]
mov     rsi, rdx
mov     rdi, rax
call    _realloc
mov     [rbp+a], rax
cmp     [rbp+a], 0
jnz     short loc_42688A
mov     rax, [rbp-48h]
mov     rax, [rax+10h]
mov     rdi, rax
call    _free
mov     rax, [rbp-48h]
mov     qword ptr [rax+10h], 0
mov     rax, [rbp-48h]
mov     qword ptr [rax+38h], 0
mov     rax, [rbp-50h]
jmp     loc_42690E
mov     rax, [rbp-48h]
mov     rdx, [rbp-30h]
mov     [rax+10h], rdx
mov     rax, [rbp-48h]
mov     ap, [rax+10h]
mov     p, [rbp-50h]
jmp     short loc_4268B2
mov     rax, ap
lea     ap, [rax+8]
mov     [rax], p
mov     p, [p+10h]
test    p, p
jnz     short loc_4268A4
mov     rax, [rbp-48h]
mov     rax, [rax+10h]
mov     rdx, [rbp-38h]
mov     rcx, rdx
mov     edx, 8
mov     rsi, nitems
mov     rdi, rax
call    _qsort
mov     rax, [rbp-48h]
mov     ap, [rax+10h]
mov     rax, [ap]
mov     [rbp+head], rax
jmp     short loc_4268F6
mov     rax, [ap]
mov     rdx, [ap+8]
mov     [rax+10h], rdx
add     ap, 8
sub     nitems, 1
test    nitems, nitems
jnz     short loc_4268E7
mov     rax, [ap]
mov     qword ptr [rax+10h], 0
mov     rax, [rbp-50h]
mov     rcx, [rbp-28h]
xor     rcx, fs:28h
jz      short loc_426922
call    ___stack_chk_fail
add     rsp, 38h
pop     ap
pop     nitems
pop     p
pop     rbp
retn