push    rbp
mov     rbp, rsp
sub     rsp, 0D0h
mov     [rbp+file], rdi
mov     rax, fs:28h
mov     [rbp+var_8], rax
xor     eax, eax
mov     [rbp+inhibit_close], 0
mov     rax, [rbp-0C8h]
movzx   eax, byte ptr [rax]
cmp     al, 2Dh
jnz     short loc_429B2F
mov     rax, [rbp-0C8h]
add     rax, 1
movzx   eax, byte ptr [rax]
test    al, al
jnz     short loc_429B2F
mov     rax, cs:stdin@@GLIBC_2_2_5
mov     rdi, rax
call    _fileno
mov     [rbp+fd], eax
mov     [rbp+inhibit_close], 1
jmp     short loc_429B4E
mov     rax, [rbp-0C8h]
mov     esi, 0
mov     rdi, rax
mov     eax, 0
call    _open
mov     [rbp+fd], eax
cmp     [rbp+fd], 0
jns     short loc_429B61
mov     eax, 0
jmp     loc_429DF6
mov     edi, 18h
call    xmalloc_real
mov     [rbp+fm], rax
lea     rdx, [rbp-0A0h]
mov     eax, [rbp-0C0h]
mov     rsi, rdx
mov     edi, eax
call    fstat
test    eax, eax
js      loc_429C1E
mov     rdx, [rbp-70h]
mov     rax, [rbp-0B0h]
mov     [rax+8], rdx
mov     rax, [rbp-0B0h]
mov     rax, [rax+8]
mov     rsi, rax
mov     eax, [rbp-0C0h]
mov     r9d, 0
mov     r8d, eax
mov     ecx, 2
mov     edx, 3
mov     edi, 0
call    _mmap
mov     rdx, rax
mov     rax, [rbp-0B0h]
mov     [rax], rdx
mov     rax, [rbp-0B0h]
mov     rax, [rax]
cmp     rax, 0FFFFFFFFFFFFFFFFh
jz      short loc_429C21
cmp     [rbp+inhibit_close], 0
jnz     short loc_429C04
mov     eax, [rbp-0C0h]
mov     edi, eax
call    _close
mov     rax, [rbp-0B0h]
mov     dword ptr [rax+10h], 1
mov     rax, [rbp-0B0h]
jmp     loc_429DF6
nop
jmp     short mmap_lose
nop
mov     rax, [rbp-0B0h]
mov     qword ptr [rax+8], 0
mov     [rbp+size], 200h
mov     rax, [rbp-0B8h]
mov     rdi, rax
call    xmalloc_real
mov     rdx, rax
mov     rax, [rbp-0B0h]
mov     [rax], rdx
mov     rax, [rbp-0B0h]
mov     rdx, [rax+8]
mov     rax, [rbp-0B8h]
mov     rcx, rax
shr     rcx, 3Fh
add     rax, rcx
sar     rax, 1
cmp     rdx, rax
jle     short loc_429CAC
shl     [rbp+size], 1
mov     rdx, [rbp-0B8h]
mov     rax, [rbp-0B0h]
mov     rax, [rax]
mov     rsi, rdx
mov     rdi, rax
call    xrealloc_real
mov     rdx, rax
mov     rax, [rbp-0B0h]
mov     [rax], rdx
mov     rax, [rbp-0B0h]
mov     rax, [rax+8]
mov     rdx, [rbp-0B8h]
sub     rdx, rax
mov     rax, rdx
mov     rsi, rax
mov     rax, [rbp-0B0h]
mov     rdx, [rax]
mov     rax, [rbp-0B0h]
mov     rax, [rax+8]
lea     rcx, [rdx+rax]
mov     eax, [rbp-0C0h]
mov     rdx, rsi
mov     rsi, rcx
mov     edi, eax
call    _read
mov     [rbp+nread], rax
cmp     [rbp+nread], 0
jle     short loc_429D29
mov     rax, [rbp-0B0h]
mov     rdx, [rax+8]
mov     rax, [rbp-0A8h]
add     rdx, rax
mov     rax, [rbp-0B0h]
mov     [rax+8], rdx
jmp     loc_429C58
cmp     [rbp+nread], 0
jns     short loc_429D38
jmp     lose
nop
cmp     [rbp+inhibit_close], 0
jnz     short loc_429D4F
mov     eax, [rbp-0C0h]
mov     edi, eax
call    _close
mov     rax, [rbp-0B0h]
mov     rax, [rax+8]
cmp     rax, [rbp-0B8h]
jge     short loc_429DA3
mov     rax, [rbp-0B0h]
mov     rax, [rax+8]
test    rax, rax
jz      short loc_429DA3
mov     rax, [rbp-0B0h]
mov     rax, [rax+8]
mov     rdx, rax
mov     rax, [rbp-0B0h]
mov     rax, [rax]
mov     rsi, rdx
mov     rdi, rax
call    xrealloc_real
mov     rdx, rax
mov     rax, [rbp-0B0h]
mov     [rax], rdx
mov     rax, [rbp-0B0h]
mov     dword ptr [rax+10h], 0
mov     rax, [rbp-0B0h]
jmp     short loc_429DF6
cmp     [rbp+inhibit_close], 0
jnz     short loc_429DD0
mov     eax, [rbp-0C0h]
mov     edi, eax
call    _close
mov     rax, [rbp-0B0h]
mov     rax, [rax]
mov     rdi, rax
call    _free
mov     rax, [rbp-0B0h]
mov     rdi, rax
call    _free
mov     eax, 0
mov     rcx, [rbp-8]
xor     rcx, fs:28h
jz      short locret_429E0A
call    ___stack_chk_fail
leave
retn