push    rbp
mov     rbp, rsp
push    rbx
sub     rsp, 88h
mov     [rbp+b], rdi
mov     [rbp+e], rsi
mov     [rbp+escaped_p], edx
mov     [rbp+dest], rcx
mov     rax, fs:28h
mov     [rbp+var_18], rax
xor     eax, eax
mov     eax, cs:opt.restrict_files_os
test    eax, eax
jnz     short loc_4275A8
mov     [rbp+mask], 1
jmp     short loc_4275AF
mov     [rbp+mask], 2
mov     eax, cs:opt.restrict_files_ctrl
test    eax, eax
jz      short loc_4275BD
or      [rbp+mask], 4
cmp     [rbp+escaped_p], 0
jz      loc_427689
mov     rax, [rbp-78h]
mov     [rbp+BTA_beg], rax
mov     rdx, [rbp-80h]
mov     rax, [rbp-38h]
sub     rdx, rax
mov     rax, rdx
mov     [rbp+BTA_len], eax
lea     rax, [rbp-58h]
mov     [rbp+BTA_dest], rax
mov     eax, [rbp-60h]
add     eax, 1
cdqe
lea     rdx, [rax+0Fh]
mov     eax, 10h
sub     rax, 1
add     rax, rdx
mov     ebx, 10h
mov     edx, 0
div     rbx
imul    rax, 10h
sub     rsp, rax
mov     rax, rsp
add     rax, 0Fh
shr     rax, 4
shl     rax, 4
mov     rdx, rax
mov     rax, [rbp-30h]
mov     [rax], rdx
mov     eax, [rbp-60h]
movsxd  rdx, eax
mov     rax, [rbp-30h]
mov     rax, [rax]
mov     rcx, [rbp-38h]
mov     rsi, rcx
mov     rdi, rax
call    _memcpy
mov     rax, [rbp-30h]
mov     rdx, [rax]
mov     eax, [rbp-60h]
cdqe
add     rax, rdx
mov     byte ptr [rax], 0
mov     rax, [rbp-58h]
mov     rdi, rax
call    url_unescape
mov     rax, [rbp-58h]
mov     [rbp+b], rax
mov     rbx, [rbp-58h]
mov     rax, [rbp-58h]
mov     rdi, rax
call    _strlen
add     rax, rbx
mov     [rbp+e], rax
mov     [rbp+quoted], 0
mov     rax, [rbp-78h]
mov     [rbp+p], rax
jmp     short loc_4276C0
mov     rax, [rbp-50h]
movzx   eax, byte ptr [rax]
movzx   eax, al
cdqe
movzx   eax, byte ptr [rax+437320h]
movzx   eax, al
and     eax, [rbp-64h]
test    eax, eax
jz      short loc_4276BB
add     [rbp+quoted], 1
add     [rbp+p], 1
mov     rax, [rbp-50h]
cmp     rax, [rbp-80h]
jb      short loc_42769A
mov     rdx, [rbp-80h]
mov     rax, [rbp-78h]
sub     rdx, rax
mov     rax, rdx
mov     edx, eax
mov     eax, [rbp-68h]
add     eax, eax
add     eax, edx
mov     [rbp+outlen], eax
mov     rax, [rbp-90h]
mov     [rbp+G_], rax
mov     rax, [rbp-28h]
mov     edx, [rax+0Ch]
mov     eax, [rbp-5Ch]
add     eax, edx
cdqe
mov     [rbp+do_realloc_needed_size], rax
mov     [rbp+do_realloc_newsize], 0
jmp     short loc_427736
mov     rax, [rbp-28h]
mov     eax, [rax+8]
add     eax, eax
cdqe
mov     [rbp+do_realloc_newsize], rax
cmp     [rbp+do_realloc_newsize], 1Fh
jg      short loc_427729
mov     [rbp+do_realloc_newsize], 20h
mov     rax, [rbp-48h]
mov     edx, eax
mov     rax, [rbp-28h]
mov     [rax+8], edx
mov     rax, [rbp-28h]
mov     eax, [rax+8]
cdqe
cmp     rax, [rbp-20h]
jl      short loc_42770B
cmp     [rbp+do_realloc_newsize], 0
jz      short loc_42776C
mov     rdx, [rbp-48h]
mov     rax, [rbp-28h]
mov     rax, [rax]
mov     rsi, rdx
mov     rdi, rax
call    xrealloc_real
mov     rdx, rax
mov     rax, [rbp-28h]
mov     [rax], rdx
cmp     [rbp+quoted], 0
jnz     short loc_4277A5
mov     eax, [rbp-5Ch]
movsxd  rdx, eax
mov     rax, [rbp-90h]
mov     rcx, [rax]
mov     rax, [rbp-90h]
mov     eax, [rax+0Ch]
cdqe
add     rcx, rax
mov     rax, [rbp-78h]
mov     rsi, rax
mov     rdi, rcx
call    _memcpy
jmp     loc_4278B3
mov     rax, [rbp-90h]
mov     rdx, [rax]
mov     rax, [rbp-90h]
mov     eax, [rax+0Ch]
cdqe
add     rax, rdx
mov     [rbp+q], rax
mov     rax, [rbp-78h]
mov     [rbp+p], rax
jmp     loc_427862
mov     rax, [rbp-50h]
movzx   eax, byte ptr [rax]
movzx   eax, al
cdqe
movzx   eax, byte ptr [rax+437320h]
movzx   eax, al
and     eax, [rbp-64h]
test    eax, eax
jnz     short loc_427803
mov     rax, [rbp-40h]
lea     rdx, [rax+1]
mov     [rbp+q], rdx
mov     rdx, [rbp-50h]
movzx   edx, byte ptr [rdx]
mov     [rax], dl
jmp     short loc_42785D
mov     rax, [rbp-50h]
movzx   eax, byte ptr [rax]
mov     [rbp+ch_0], al
mov     rax, [rbp-40h]
lea     rdx, [rax+1]
mov     [rbp+q], rdx
mov     byte ptr [rax], 25h
mov     rax, [rbp-40h]
lea     rdx, [rax+1]
mov     [rbp+q], rdx
movzx   edx, byte ptr [rbp-69h]
shr     dl, 4
movzx   edx, dl
movsxd  rdx, edx
movzx   edx, byte ptr [rdx+4371BCh]
mov     [rax], dl
mov     rax, [rbp-40h]
lea     rdx, [rax+1]
mov     [rbp+q], rdx
movzx   edx, byte ptr [rbp-69h]
and     edx, 0Fh
movsxd  rdx, edx
movzx   edx, byte ptr [rdx+4371BCh]
mov     [rax], dl
add     [rbp+p], 1
mov     rax, [rbp-50h]
cmp     rax, [rbp-80h]
jb      loc_4277CF
mov     rdx, [rbp-40h]
mov     rax, [rbp-90h]
mov     rcx, [rax]
mov     rax, [rbp-90h]
mov     eax, [rax+0Ch]
cdqe
add     rax, rcx
sub     rdx, rax
mov     eax, [rbp-5Ch]
cdqe
cmp     rdx, rax
jz      short loc_4278B3
mov     ecx, 4374D0h
mov     edx, 5CCh
mov     esi, 4371A0h
mov     edi, 437420h
call    ___assert_fail
mov     rax, [rbp-90h]
mov     edx, [rax+0Ch]
mov     eax, [rbp-5Ch]
add     edx, eax
mov     rax, [rbp-90h]
mov     [rax+0Ch], edx
nop
mov     rax, [rbp-18h]
xor     rax, fs:28h
jz      short loc_4278E1
call    ___stack_chk_fail
mov     rbx, [rbp-8]
leave
retn