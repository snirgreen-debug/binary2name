push    rbp
mov     rbp, rsp
push    rbx
sub     rsp, 58h
mov     [rbp+var_48], rdi
mov     [rbp+var_50], rsi
mov     [rbp+var_58], rdx
mov     [rbp+var_5C], ecx
mov     rax, fs:28h
mov     [rbp+var_18], rax
xor     eax, eax
lea     rdx, [rbp-38h]
mov     rcx, [rbp-50h]
mov     rax, [rbp-48h]
mov     rsi, rcx
mov     rdi, rax
call    sub_40F08F
test    al, al
jz      loc_411D17
mov     rdx, [rbp-38h]
mov     rax, [rbp-58h]
mov     esi, 405BE5h
mov     rdi, rax
call    sub_40A02A
mov     [rbp+var_30], rax
mov     rax, [rbp-30h]
mov     byte ptr [rax+1Bh], 0
mov     rax, [rbp-30h]
movzx   edx, byte ptr [rax+1Bh]
mov     rax, [rbp-30h]
mov     [rax+1Ah], dl
mov     edi, 40h
call    sub_422DC2
mov     [rbp+buffer], rax
mov     rax, [rbp-30h]
mov     rdx, [rbp-28h]
mov     [rax+38h], rdx
mov     rax, [rbp-28h]
mov     qword ptr [rax+8], 64h
mov     rax, [rbp-28h]
mov     rax, [rax+8]
mov     rdi, rax
call    sub_422DC2
mov     rdx, rax
mov     rax, [rbp-28h]
mov     [rax], rdx
mov     rax, [rbp-28h]
mov     qword ptr [rax+20h], 0
mov     eax, [rbp-5Ch]
cdqe
mov     rdi, rax
call    _re_set_syntax
mov     eax, [rbp-5Ch]
movsxd  rdx, eax
mov     rax, [rbp-28h]
mov     [rax+18h], rdx
mov     rax, [rbp-28h]
mov     qword ptr [rax+28h], 0
mov     rax, [rbp-38h]
mov     rdi, rax
call    _strlen
mov     rcx, rax
mov     rax, [rbp-38h]
mov     rdx, [rbp-28h]
mov     rsi, rcx
mov     rdi, rax
call    _re_compile_pattern
mov     [rbp+var_20], rax
cmp     [rbp+var_20], 0
jz      short loc_411CF4
mov     rbx, [rbp-38h]
mov     edi, 42EE40h
call    _gettext
mov     rdx, rax
mov     rax, [rbp-20h]
mov     r8, rax
mov     rcx, rbx
mov     esi, 0
mov     edi, 1
mov     eax, 0
call    _error
mov     rax, [rbp-38h]
mov     esi, 1
mov     rdi, rax
call    sub_4100AD
movd    edx, xmm0
mov     rax, [rbp-30h]
mov     [rax+24h], edx
mov     eax, 1
jmp     short loc_411D1C
mov     eax, 0
mov     rbx, [rbp-18h]
xor     rbx, fs:28h
jz      short loc_411D30
call    ___stack_chk_fail
add     rsp, 58h
pop     rbx
pop     rbp
retn