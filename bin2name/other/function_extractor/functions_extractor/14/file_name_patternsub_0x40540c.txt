push    rbp
mov     rbp, rsp
push    rbx
sub     rsp, 0D8h
mov     [rbp+var_D8], rdi
mov     [rbp+var_E0], rsi
mov     rax, fs:28h
mov     [rbp+var_18], rax
xor     eax, eax
mov     [rbp+cflags], 9
mov     rax, [rbp-0E0h]
lea     rcx, [rax+8]
mov     rax, [rbp-0E0h]
mov     edx, 0
mov     rsi, rax
mov     rdi, rcx
call    assert_grecs_value_type
test    eax, eax
jz      short loc_40546F
mov     eax, 1
jmp     loc_4056F7
mov     rax, [rbp-0E0h]
mov     rax, [rax+28h]
mov     [rbp+var_C0], rax
mov     edi, 48h
call    emalloc
mov     [rbp+ptr], rax
mov     rax, [rbp-0C0h]
movzx   eax, byte ptr [rax]
cmp     al, 21h
jnz     short loc_4054B8
mov     rax, [rbp-0B0h]
mov     dword ptr [rax+4], 1
add     [rbp+var_C0], 1
jmp     short loc_4054C6
mov     rax, [rbp-0B0h]
mov     dword ptr [rax+4], 0
mov     rax, [rbp-0C0h]
movzx   eax, byte ptr [rax]
cmp     al, 2Fh
jnz     loc_4056AF
mov     rax, [rbp-0B0h]
mov     dword ptr [rax], 1
mov     rax, [rbp-0C0h]
add     rax, 1
mov     esi, 2Fh
mov     rdi, rax
call    _strchr
mov     [rbp+var_A8], rax
cmp     [rbp+var_A8], 0
jnz     short loc_405551
mov     edi, 42328Bh
call    _gettext
mov     rdx, rax
mov     rax, [rbp-0E0h]
add     rax, 8
mov     esi, 0
mov     rdi, rax
mov     eax, 0
call    grecs_error
mov     rax, [rbp-0B0h]
mov     rdi, rax
call    _free
mov     eax, 1
jmp     loc_4056F7
mov     rax, [rbp-0A8h]
add     rax, 1
mov     [rbp+var_B8], rax
jmp     loc_4055ED
mov     rax, [rbp-0B8h]
movzx   eax, byte ptr [rax]
movsx   eax, al
cmp     eax, 62h
jz      short loc_405581
cmp     eax, 69h
jz      short loc_40558A
jmp     short loc_405593
and     [rbp+cflags], 0FFFFFFFEh
jmp     short loc_4055E5
or      [rbp+cflags], 2
jmp     short loc_4055E5
mov     rax, [rbp-0B8h]
movzx   eax, byte ptr [rax]
movsx   ebx, al
mov     edi, 42329Fh
call    _gettext
mov     rdx, rax
mov     rax, [rbp-0E0h]
add     rax, 8
mov     ecx, ebx
mov     esi, 0
mov     rdi, rax
mov     eax, 0
call    grecs_error
mov     rax, [rbp-0B0h]
mov     rdi, rax
call    _free
mov     eax, 1
jmp     loc_4056F7
add     [rbp+var_B8], 1
mov     rax, [rbp-0B8h]
movzx   eax, byte ptr [rax]
test    al, al
jnz     loc_405568
mov     rax, [rbp-0A8h]
mov     byte ptr [rax], 0
mov     rax, [rbp-0C0h]
lea     rsi, [rax+1]
mov     rax, [rbp-0B0h]
lea     rcx, [rax+8]
mov     eax, [rbp-0C8h]
mov     edx, eax
mov     rdi, rcx
call    _regcomp
mov     [rbp+errcode], eax
mov     rax, [rbp-0A8h]
mov     byte ptr [rax], 2Fh
cmp     [rbp+errcode], 0
jz      loc_4056D9
mov     rax, [rbp-0B0h]
lea     rsi, [rax+8]
lea     rdx, [rbp-0A0h]
mov     eax, [rbp-0C4h]
mov     ecx, 80h
mov     edi, eax
call    _regerror
mov     rax, [rbp-0E0h]
lea     rdi, [rax+8]
lea     rax, [rbp-0A0h]
mov     rcx, rax
mov     edx, 4232B5h
mov     esi, 0
mov     eax, 0
call    grecs_error
mov     rax, [rbp-0B0h]
mov     rdi, rax
call    filename_pattern_free
mov     eax, 1
jmp     short loc_4056F7
mov     rax, [rbp-0B0h]
mov     dword ptr [rax], 0
mov     rax, [rbp-0C0h]
mov     rdi, rax
call    estrdup
mov     rdx, rax
mov     rax, [rbp-0B0h]
mov     [rax+8], rdx
mov     rdx, [rbp-0B0h]
mov     rax, [rbp-0D8h]
mov     rsi, rdx
mov     rdi, rax
call    grecs_list_append
mov     eax, 0
mov     rbx, [rbp-18h]
xor     rbx, fs:28h
jz      short loc_40570B
call    ___stack_chk_fail
add     rsp, 0D8h
pop     rbx
pop     rbp
retn