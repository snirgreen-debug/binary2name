push    rbp
mov     rbp, rsp
sub     rsp, 30h
mov     [rbp+s], rdi
mov     [rbp+var_30], rsi
mov     rax, [rbp-28h]
mov     rdi, rax
call    _strlen
mov     [rbp+n], rax
mov     rax, [rbp-30h]
mov     rdi, rax
call    _strlen
mov     [rbp+var_18], rax
jmp     short loc_402D6B
sub     [rbp+n], 1
cmp     [rbp+n], 0
jz      short loc_402D88
mov     rax, [rbp-20h]
lea     rdx, [rax-1]
mov     rax, [rbp-28h]
add     rax, rdx
movzx   eax, byte ptr [rax]
cmp     al, 2Fh
jz      short loc_402D66
mov     rax, [rbp-28h]
movzx   eax, byte ptr [rax]
test    al, al
jz      short loc_402D9A
mov     edx, 1
jmp     short loc_402D9F
mov     edx, 0
mov     rax, [rbp-20h]
add     rdx, rax
mov     rax, [rbp-18h]
add     rax, rdx
mov     [rbp+var_10], rax
mov     rax, [rbp-10h]
add     rax, 1
mov     rdi, rax
call    _malloc
mov     [rbp+dest], rax
cmp     [rbp+dest], 0
jz      short loc_402E31
mov     rdx, [rbp-20h]
mov     rcx, [rbp-28h]
mov     rax, [rbp-8]
mov     rsi, rcx
mov     rdi, rax
call    _memcpy
mov     rax, [rbp-28h]
movzx   eax, byte ptr [rax]
test    al, al
jz      short loc_402E04
mov     rax, [rbp-20h]
lea     rdx, [rax+1]
mov     [rbp+n], rdx
mov     rdx, [rbp-8]
add     rax, rdx
mov     byte ptr [rax], 2Fh
mov     rdx, [rbp-8]
mov     rax, [rbp-20h]
lea     rcx, [rdx+rax]
mov     rdx, [rbp-18h]
mov     rax, [rbp-30h]
mov     rsi, rax
mov     rdi, rcx
call    _memcpy
mov     rdx, [rbp-8]
mov     rax, [rbp-10h]
add     rax, rdx
mov     byte ptr [rax], 0
mov     rax, [rbp-8]
leave
retn