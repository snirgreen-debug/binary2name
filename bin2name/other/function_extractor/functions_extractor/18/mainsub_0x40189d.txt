push    rbp
mov     rbp, rsp
push    rbx
sub     rsp, 78h
mov     [rbp+argc], edi
mov     [rbp+argv], rsi
mov     rax, fs:28h
mov     [rbp+var_18], rax
xor     eax, eax
mov     [rbp+delimiter], 0Ah
mov     [rbp+slocate_compat], 0
mov     [rbp+slocate_seclevel], 0
mov     rax, [rbp-80h]
mov     rax, [rax]
test    rax, rax
jz      short loc_4018EF
mov     rax, [rbp-80h]
mov     rax, [rax]
mov     rdi, rax
call    set_program_name
jmp     short loc_4018F9
mov     edi, 405310h
call    set_program_name
mov     edi, 401D73h
call    atexit
test    eax, eax
jz      short loc_40192F
mov     edi, 405318h
call    _gettext
mov     rbx, rax
call    ___errno_location
mov     eax, [rax]
mov     rdx, rbx
mov     esi, eax
mov     edi, 1
mov     eax, 0
call    _error
mov     [rbp+oldpathsize], 402h
mov     rax, [rbp-38h]
mov     [rbp+pathsize], rax
mov     rax, [rbp-48h]
mov     rdi, rax
call    xmalloc
mov     [rbp+path], rax
mov     rax, [rbp-38h]
mov     rdi, rax
call    xmalloc
mov     [rbp+oldpath], rax
mov     rax, [rbp-40h]
mov     byte ptr [rax], 0
mov     [rbp+oldcount], 0
jmp     loc_401A3C
mov     eax, [rbp-58h]
cmp     eax, 53h
jz      short loc_4019A4
cmp     eax, 53h
jg      short loc_401989
cmp     eax, 30h
jz      short loc_401998
jmp     loc_401A23
cmp     eax, 68h
jz      short loc_4019F6
cmp     eax, 76h
jz      short loc_401A0F
jmp     loc_401A23
mov     [rbp+delimiter], 0
jmp     loc_401A3C
mov     [rbp+slocate_compat], 1
mov     rax, cs:optarg@@GLIBC_2_2_5
mov     rdi, rax
call    get_seclevel
mov     [rbp+slocate_seclevel], rax
cmp     [rbp+slocate_seclevel], 0
js      short loc_4019CC
cmp     [rbp+slocate_seclevel], 1
jle     short loc_401A3C
mov     edi, 405340h
call    _gettext
mov     rdx, rax
mov     rax, [rbp-30h]
mov     rcx, rax
mov     esi, 0
mov     edi, 1
mov     eax, 0
call    _error
jmp     short loc_401A3C
mov     rax, cs:stdout@@GLIBC_2_2_5
mov     rdi, rax
call    usage
mov     eax, 0
jmp     loc_401CA9
mov     edi, 405310h
call    display_findutils_version
mov     eax, 0
jmp     loc_401CA9
mov     rax, cs:stderr@@GLIBC_2_2_5
mov     rdi, rax
call    usage
mov     eax, 1
jmp     loc_401CA9
mov     rsi, [rbp-80h]
mov     eax, [rbp-74h]
mov     r8d, 0
mov     ecx, 405180h
mov     edx, 40536Bh
mov     edi, eax
call    _getopt_long
mov     [rbp+optc], eax
cmp     [rbp+optc], 0FFFFFFFFh
jnz     loc_401972
mov     eax, cs:optind@@GLIBC_2_2_5
cmp     eax, [rbp-74h]
jz      short loc_401A8B
mov     rax, cs:stderr@@GLIBC_2_2_5
mov     rdi, rax
call    usage
mov     eax, 1
jmp     loc_401CA9
cmp     [rbp+slocate_compat], 0
jz      short loc_401ACE
mov     rax, cs:stdout@@GLIBC_2_2_5
cmp     [rbp+slocate_seclevel], 0
jz      short loc_401AA6
mov     edx, 31h
jmp     short loc_401AAB
mov     edx, 30h
mov     rsi, rax
mov     edi, edx
call    _fputc
mov     rax, cs:stdout@@GLIBC_2_2_5
mov     rsi, rax
mov     edi, 0
call    _fputc
jmp     loc_401C65
mov     rax, cs:stdout@@GLIBC_2_2_5
mov     rcx, rax
mov     edx, 0Ah
mov     esi, 1
mov     edi, 405371h
call    _fwrite
cmp     rax, 0Ah
jz      loc_401C65
mov     edi, 405380h
call    _gettext
mov     rbx, rax
call    ___errno_location
mov     eax, [rax]
mov     rdx, rbx
mov     esi, eax
mov     edi, 1
mov     eax, 0
call    _error
jmp     loc_401C65
mov     rax, [rbp-50h]
mov     edx, [rbp-54h]
movsxd  rdx, edx
sub     rdx, 1
add     rax, rdx
mov     byte ptr [rax], 0
mov     rdx, [rbp-50h]
mov     rax, [rbp-40h]
mov     rsi, rdx
mov     rdi, rax
call    prefix_length
mov     [rbp+count], eax
mov     eax, [rbp-6Ch]
sub     eax, [rbp-68h]
mov     [rbp+diffcount], eax
cmp     [rbp+diffcount], 7FFFh
jg      short loc_401B68
cmp     [rbp+diffcount], 0FFFF8000h
jge     short loc_401B77
mov     [rbp+count], 0
mov     eax, [rbp-68h]
neg     eax
mov     [rbp+diffcount], eax
mov     eax, [rbp-6Ch]
mov     [rbp+oldcount], eax
cmp     [rbp+slocate_compat], 0
jz      short loc_401B8C
mov     [rbp+slocate_compat], 0
jmp     short loc_401BF3
cmp     [rbp+diffcount], 0FFFFFF81h
jl      short loc_401B98
cmp     [rbp+diffcount], 7Fh
jle     short loc_401BD5
mov     rax, cs:stdout@@GLIBC_2_2_5
mov     rsi, rax
mov     edi, 80h
call    __IO_putc
cmp     eax, 0FFFFFFFFh
jnz     short loc_401BB6
call    outerr
mov     rdx, cs:stdout@@GLIBC_2_2_5
mov     eax, [rbp-64h]
mov     rsi, rdx
mov     edi, eax
call    put_short
test    eax, eax
jnz     short loc_401BF3
call    outerr
jmp     short loc_401BF3
mov     rdx, cs:stdout@@GLIBC_2_2_5
mov     eax, [rbp-64h]
mov     rsi, rdx
mov     edi, eax
call    __IO_putc
cmp     eax, 0FFFFFFFFh
jnz     short loc_401BF3
call    outerr
mov     rax, cs:stdout@@GLIBC_2_2_5
mov     rcx, [rbp-50h]
mov     edx, [rbp-6Ch]
movsxd  rdx, edx
add     rdx, rcx
mov     rsi, rax
mov     rdi, rdx
call    _fputs
cmp     eax, 0FFFFFFFFh
jz      short loc_401C30
mov     rax, cs:stdout@@GLIBC_2_2_5
mov     rsi, rax
mov     edi, 0
call    __IO_putc
cmp     eax, 0FFFFFFFFh
jnz     short loc_401C35
call    outerr
mov     rax, [rbp-40h]
mov     [rbp+tmppath], rax
mov     rax, [rbp-38h]
mov     [rbp+tmppathsize], rax
mov     rax, [rbp-50h]
mov     [rbp+oldpath], rax
mov     rax, [rbp-48h]
mov     [rbp+oldpathsize], rax
mov     rax, [rbp-28h]
mov     [rbp+path], rax
mov     rax, [rbp-20h]
mov     [rbp+pathsize], rax
mov     rcx, cs:stdin@@GLIBC_2_2_5
mov     edx, [rbp-60h]
lea     rsi, [rbp-48h]
lea     rax, [rbp-50h]
mov     rdi, rax
call    _getdelim
mov     [rbp+line_len], eax
cmp     [rbp+line_len], 0
jg      loc_401B23
mov     rax, [rbp-50h]
mov     rdi, rax
call    _free
mov     rax, [rbp-40h]
mov     rdi, rax
call    _free
mov     eax, 0
mov     rbx, [rbp-18h]
xor     rbx, fs:28h
jz      short loc_401CBD
call    ___stack_chk_fail
add     rsp, 78h
pop     rbx
pop     rbp
retn