push    rbp
mov     rbp, rsp
sub     rsp, 50h
mov     [rbp+unitname], rdi
mov     [rbp+funcname], rsi
mov     [rbp+count], rdx
mov     [rbp+linenum], ecx
mov     [rbp+file], r8
mov     [rbp+errfile], r9
mov     rcx, [rbp-50h]
mov     rdx, [rbp-48h]
mov     esi, [rbp-3Ch]
mov     rax, [rbp-28h]
mov     rdi, rax
call    checkunitname
test    eax, eax
jz      short loc_403DDA
mov     eax, 11h
jmp     locret_40410A
mov     rax, [rbp-30h]
mov     rdi, rax
call    removespaces
mov     rax, [rbp-30h]
mov     rdi, rax
call    _strlen
sub     eax, 2
mov     [rbp+i], eax
cmp     [rbp+i], 0
jle     short loc_403E2E
mov     eax, [rbp-14h]
movsxd  rdx, eax
mov     rax, [rbp-30h]
add     rax, rdx
lea     rsi, asc_413D06
mov     rdi, rax
call    _strcmp
test    eax, eax
jnz     short loc_403E2E
mov     eax, [rbp-14h]
movsxd  rdx, eax
mov     rax, [rbp-30h]
add     rax, rdx
mov     byte ptr [rax], 0
mov     rax, [rbp-30h]
mov     rdi, rax
call    fnlookup
mov     [rbp+source], rax
cmp     [rbp+source], 0
jnz     loc_403EE9
cmp     [rbp+errfile], 0
jz      loc_403EDF
mov     rax, [rbp-30h]
lea     rsi, asc_413D09
mov     rdi, rax
call    _strpbrk
test    rax, rax
jnz     short loc_403EAC
lea     rax, progname
mov     rdx, [rax]
mov     edi, [rbp-3Ch]
mov     rsi, [rbp-48h]
mov     rcx, [rbp-28h]
mov     rax, [rbp-50h]
sub     rsp, 8
push    [rbp+funcname]
mov     r9d, edi
mov     r8, rsi
lea     rsi, aSBadDefinition
mov     rdi, rax
mov     eax, 0
call    _fprintf
add     rsp, 10h
jmp     short loc_403EDF
lea     rax, progname
mov     rdx, [rax]
mov     edi, [rbp-3Ch]
mov     rsi, [rbp-48h]
mov     rcx, [rbp-28h]
mov     rax, [rbp-50h]
mov     r9d, edi
mov     r8, rsi
lea     rsi, aSBadFunctionDe
mov     rdi, rax
mov     eax, 0
call    _fprintf
mov     eax, 11h
jmp     locret_40410A
mov     rax, [rbp-28h]
mov     rdi, rax
call    fnlookup
mov     [rbp+funcentry], rax
cmp     [rbp+funcentry], 0
jz      short loc_403F6F
lea     rax, flags
mov     eax, [rax+18h]
test    eax, eax
jz      short loc_403F61
cmp     [rbp+errfile], 0
jz      short loc_403F61
mov     rax, [rbp-10h]
mov     r8, [rax+90h]
mov     rax, [rbp-10h]
mov     edi, [rax+8Ch]
lea     rax, progname
mov     rdx, [rax]
mov     rcx, [rbp-28h]
mov     rax, [rbp-50h]
push    [rbp+file]
mov     esi, [rbp-3Ch]
push    rsi
mov     r9, r8
mov     r8d, edi
lea     rsi, aSFunctionSDefi
mov     rdi, rax
mov     eax, 0
call    _fprintf
add     rsp, 10h
mov     rax, [rbp-10h]
mov     rdi, rax
call    freefunction
jmp     short loc_403FB5
lea     rsi, aNewfunction
mov     edi, 98h
call    mymalloc
mov     [rbp+funcentry], rax
mov     rax, [rbp-28h]
mov     rdi, rax
call    dupstr
mov     rdx, rax
mov     rax, [rbp-10h]
mov     [rax], rdx
mov     rax, [rbp-10h]
mov     rdi, rax
call    addfunction
mov     rax, [rbp-38h]
mov     eax, [rax]
lea     edx, [rax+1]
mov     rax, [rbp-38h]
mov     [rax], edx
mov     rax, [rbp-10h]
mov     edx, [rbp-3Ch]
mov     [rax+8Ch], edx
mov     rax, [rbp-10h]
mov     rdx, [rbp-48h]
mov     [rax+90h], rdx
mov     rax, [rbp-8]
mov     edx, [rax+88h]
mov     rax, [rbp-10h]
mov     [rax+88h], edx
mov     rax, [rbp-8]
mov     rax, [rax+68h]
test    rax, rax
jz      loc_4040C3
mov     rax, [rbp-8]
mov     edx, [rax+70h]
mov     rax, [rbp-10h]
mov     [rax+70h], edx
mov     rax, [rbp-8]
mov     rax, [rax+78h]
mov     rdi, rax
call    dupstr
mov     rdx, rax
mov     rax, [rbp-10h]
mov     [rax+78h], rdx
mov     rax, [rbp-10h]
mov     eax, [rax+70h]
shl     eax, 4
lea     rsi, aCopyfunction
mov     edi, eax
call    mymalloc
mov     rdx, rax
mov     rax, [rbp-10h]
mov     [rax+68h], rdx
mov     [rbp+i], 0
jmp     short loc_4040B5
mov     rax, [rbp-10h]
mov     rax, [rax+68h]
mov     edx, [rbp-14h]
movsxd  rdx, edx
shl     rdx, 4
add     rdx, rax
mov     rax, [rbp-8]
mov     rax, [rax+68h]
mov     ecx, [rbp-14h]
movsxd  rcx, ecx
shl     rcx, 4
add     rax, rcx
movsd   xmm0, qword ptr [rax]
movsd   qword ptr [rdx], xmm0
mov     rax, [rbp-10h]
mov     rax, [rax+68h]
mov     edx, [rbp-14h]
movsxd  rdx, edx
shl     rdx, 4
add     rdx, rax
mov     rax, [rbp-8]
mov     rax, [rax+68h]
mov     ecx, [rbp-14h]
movsxd  rcx, ecx
shl     rcx, 4
add     rax, rcx
movsd   xmm0, qword ptr [rax+8]
movsd   qword ptr [rdx+8], xmm0
add     [rbp+i], 1
mov     rax, [rbp-10h]
mov     eax, [rax+70h]
cmp     eax, [rbp-14h]
jg      short loc_40404B
jmp     short loc_404105
mov     rax, [rbp-10h]
mov     qword ptr [rax+68h], 0
mov     rax, [rbp-8]
lea     rdx, [rax+8]
mov     rax, [rbp-10h]
add     rax, 8
mov     rsi, rdx
mov     rdi, rax
call    copyfunctype
mov     rax, [rbp-8]
lea     rdx, [rax+38h]
mov     rax, [rbp-10h]
add     rax, 38h
mov     rsi, rdx
mov     rdi, rax
call    copyfunctype
mov     eax, 0
leave
retn