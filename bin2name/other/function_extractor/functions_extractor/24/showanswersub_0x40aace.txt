push    rbp
mov     rbp, rsp
sub     rsp, 6A0h
mov     [rbp+havestr], rdi
mov     [rbp+have], rsi
mov     [rbp+wantstr], rdx
mov     [rbp+want], rcx
mov     rax, fs:28h
mov     [rbp+var_8], rax
xor     eax, eax
mov     [rbp+right], 0
mov     [rbp+left], 0
mov     [rbp+doingrec], 0
mov     rcx, [rbp-6A0h]
mov     rax, [rbp-690h]
lea     rdx, ignore_dimless
mov     rsi, rcx
mov     rdi, rax
call    compareunits
test    eax, eax
jz      loc_40ACD2
mov     rax, [rbp-690h]
movsd   xmm1, qword ptr [rax+640h]
movsd   xmm0, cs:qword_416DA0
divsd   xmm0, xmm1
movsd   [rbp+invhave.factor], xmm0
mov     rax, [rbp-690h]
mov     [rbp+src], rax
lea     rax, [rbp-650h]
add     rax, 320h
mov     [rbp+dest], rax
jmp     short loc_40ABB4
mov     rax, [rbp-660h]
mov     rdx, [rax]
mov     rax, [rbp-658h]
mov     [rax], rdx
add     [rbp+src], 8
add     [rbp+dest], 8
mov     rax, [rbp-660h]
mov     rax, [rax]
test    rax, rax
jnz     short loc_40AB90
mov     rax, [rbp-658h]
mov     qword ptr [rax], 0
mov     rax, [rbp-690h]
add     rax, 320h
mov     [rbp+src], rax
lea     rax, [rbp-650h]
mov     [rbp+dest], rax
jmp     short loc_40AC19
mov     rax, [rbp-660h]
mov     rdx, [rax]
mov     rax, [rbp-658h]
mov     [rax], rdx
add     [rbp+src], 8
add     [rbp+dest], 8
mov     rax, [rbp-660h]
mov     rax, [rax]
test    rax, rax
jnz     short loc_40ABF5
mov     rax, [rbp-658h]
mov     qword ptr [rax], 0
lea     rax, flags
mov     eax, [rax+14h]
test    eax, eax
jnz     short loc_40AC68
mov     rcx, [rbp-6A0h]
lea     rax, [rbp-650h]
lea     rdx, ignore_dimless
mov     rsi, rcx
mov     rdi, rax
call    compareunits
test    eax, eax
jz      short loc_40AC96
mov     rcx, [rbp-6A0h]
mov     rdx, [rbp-698h]
mov     rsi, [rbp-690h]
mov     rax, [rbp-688h]
mov     rdi, rax
call    showconformabilityerr
mov     eax, 0FFFFFFFFh
jmp     loc_40AF1C
lea     rax, flags
mov     eax, [rax+1Ch]
test    eax, eax
jle     short loc_40ACAE
mov     edi, 9
call    logputchar
lea     rdi, aReciprocalConv
call    logputs
lea     rax, [rbp-650h]
mov     [rbp+have], rax
mov     [rbp+doingrec], 1
lea     rax, flags
mov     eax, [rax+1Ch]
cmp     eax, 2
jnz     short loc_40AD5B
cmp     [rbp+doingrec], 0
jnz     short loc_40AD08
lea     rax, locale
mov     [rbp+right], rax
mov     rax, [rbp-670h]
mov     [rbp+left], rax
jmp     short loc_40AD5B
mov     rax, [rbp-688h]
mov     esi, 2Fh
mov     rdi, rax
call    _strchr
test    rax, rax
jz      short loc_40AD3F
lea     rax, a1_1
mov     [rbp+left], rax
lea     rax, asc_414CAB
mov     [rbp+right], rax
jmp     short loc_40AD5B
lea     rax, a1_2
mov     [rbp+left], rax
lea     rax, locale
mov     [rbp+right], rax
lea     rax, flags
mov     eax, [rax+1Ch]
cmp     eax, 2
jnz     short loc_40AD95
mov     rcx, [rbp-670h]
mov     rdx, [rbp-688h]
mov     rax, [rbp-668h]
mov     rsi, rax
lea     rdi, aSSS_0
mov     eax, 0
call    logprintf
jmp     short loc_40ADB0
lea     rax, flags
mov     eax, [rax+1Ch]
cmp     eax, 1
jnz     short loc_40ADB0
lea     rdi, asc_414CBD
call    logputs
lea     rax, flags
mov     eax, [rax+1Ch]
cmp     eax, 2
jnz     short loc_40ADF7
mov     rax, [rbp-690h]
movsd   xmm0, qword ptr [rax+640h]
mov     rax, [rbp-6A0h]
movsd   xmm1, qword ptr [rax+640h]
divsd   xmm0, xmm1
mov     rax, [rbp-698h]
mov     esi, 1
mov     rdi, rax
call    showunitname
jmp     short loc_40AE30
mov     rax, [rbp-690h]
movsd   xmm0, qword ptr [rax+640h]
mov     rax, [rbp-6A0h]
movsd   xmm1, qword ptr [rax+640h]
divsd   xmm0, xmm1
lea     rax, num_format
mov     rax, [rax]
mov     rdi, rax
mov     eax, 1
call    logprintf
lea     rax, flags
mov     eax, [rax+4]
test    eax, eax
jnz     loc_40AF0D
lea     rax, flags
mov     eax, [rax+1Ch]
cmp     eax, 2
jnz     short loc_40AE7C
mov     rcx, [rbp-670h]
mov     rdx, [rbp-688h]
mov     rax, [rbp-668h]
mov     rsi, rax
lea     rdi, aSSS1
mov     eax, 0
call    logprintf
jmp     short loc_40AEA3
lea     rax, flags
mov     eax, [rax+1Ch]
cmp     eax, 1
jnz     short loc_40AE99
lea     rdi, asc_414CD2
call    logputs
jmp     short loc_40AEA3
mov     edi, 0Ah
call    logputchar
mov     rax, [rbp-6A0h]
movsd   xmm0, qword ptr [rax+640h]
mov     rax, [rbp-690h]
movsd   xmm1, qword ptr [rax+640h]
divsd   xmm0, xmm1
lea     rax, num_format
mov     rax, [rax]
mov     rdi, rax
mov     eax, 1
call    logprintf
lea     rax, flags
mov     eax, [rax+1Ch]
cmp     eax, 2
jnz     short loc_40AF0D
mov     edi, 29h
call    logputchar
mov     rax, [rbp-698h]
mov     esi, 0
mov     rdi, rax
pxor    xmm0, xmm0
call    showunitname
mov     edi, 0Ah
call    logputchar
mov     eax, 0
mov     rsi, [rbp-8]
xor     rsi, fs:28h
jz      short locret_40AF30
call    ___stack_chk_fail
leave
retn