push    rbp
mov     rbp, rsp
push    rbx
sub     rsp, 48h
mov     [rbp+argc], edi
mov     [rbp+argv], rsi
mov     [rbp+from], rdx
mov     [rbp+to], rcx
mov     rax, fs:28h
mov     [rbp+var_18], rax
xor     eax, eax
mov     [rbp+doprintversion], 0
mov     [rbp+unitsys], 0
jmp     loc_40E1F8
cmp     [rbp+optchar], 76h
ja      def_40DE94
mov     eax, [rbp-24h]
lea     rdx, [rax*4+0]
lea     rax, jpt_40DE94
mov     eax, [rdx+rax]
movsxd  rdx, eax
lea     rax, jpt_40DE94
add     rax, rdx
jmp     rax
lea     rax, parserflags
mov     dword ptr [rax+4], 1
jmp     loc_40E1F8
lea     rax, parserflags
mov     dword ptr [rax+4], 0
jmp     loc_40E1F8
lea     rax, flags
mov     dword ptr [rax+4], 1
lea     rax, flags
mov     dword ptr [rax+8], 1
lea     rax, flags
mov     dword ptr [rax+14h], 1
lea     rax, flags
mov     dword ptr [rax+1Ch], 0
jmp     loc_40E1F8
mov     rax, cs:optarg_ptr
mov     rax, [rax]
mov     rdi, rax
call    checksigdigits
test    eax, eax
jns     short loc_40DF19
mov     edi, 1
call    _exit
lea     rax, num_format
mov     qword ptr [rax], 0
jmp     loc_40E1F8
lea     rax, num_format
mov     qword ptr [rax], 0
lea     rax, num_format
mov     byte ptr [rax+10h], 65h
jmp     loc_40E1F8
mov     rax, cs:optarg_ptr
mov     rdx, [rax]
lea     rax, num_format
mov     [rax], rdx
jmp     loc_40E1F8
lea     rax, flags
mov     dword ptr [rax+18h], 1
jmp     loc_40E1F8
mov     [rbp+ind], 0
jmp     short loc_40DF83
add     [rbp+ind], 1
lea     rax, unitsfiles
mov     edx, [rbp-2Ch]
movsxd  rdx, edx
mov     rax, [rax+rdx*8]
test    rax, rax
jnz     short loc_40DF7F
cmp     [rbp+ind], 19h
jnz     short loc_40DFCC
mov     rax, cs:stderr_ptr
mov     rax, [rax]
mov     edx, 19h
lea     rsi, aAtMostDFSpecif
mov     rdi, rax
mov     eax, 0
call    _fprintf
mov     edi, 1
call    _exit
mov     rax, cs:optarg_ptr
mov     rax, [rax]
test    rax, rax
jz      short loc_40E009
mov     rax, cs:optarg_ptr
mov     rax, [rax]
movzx   eax, byte ptr [rax]
test    al, al
jz      short loc_40E009
mov     rax, cs:optarg_ptr
mov     rcx, [rax]
lea     rax, unitsfiles
mov     edx, [rbp-2Ch]
movsxd  rdx, edx
mov     [rax+rdx*8], rcx
jmp     short loc_40E047
mov     edi, 0
call    findunitsfile
mov     rcx, rax
lea     rax, unitsfiles
mov     edx, [rbp-2Ch]
movsxd  rdx, edx
mov     [rax+rdx*8], rcx
lea     rax, unitsfiles
mov     edx, [rbp-2Ch]
movsxd  rdx, edx
mov     rax, [rax+rdx*8]
test    rax, rax
jnz     short loc_40E047
mov     edi, 1
call    _exit
mov     eax, [rbp-2Ch]
lea     edx, [rax+1]
lea     rax, unitsfiles
movsxd  rdx, edx
mov     qword ptr [rax+rdx*8], 0
jmp     loc_40E1F8
mov     rax, cs:optarg_ptr
mov     rdx, [rax]
lea     rax, logfilename
mov     [rax], rdx
jmp     loc_40E1F8
mov     rax, cs:optarg_ptr
mov     rdx, [rax]
lea     rax, mylocale
mov     [rax], rdx
jmp     loc_40E1F8
lea     rax, flags
mov     dword ptr [rax], 0
jmp     loc_40E1F8
lea     rax, flags
mov     dword ptr [rax+8], 1
jmp     loc_40E1F8
lea     rax, flags
mov     dword ptr [rax+0Ch], 1
jmp     loc_40E1F8
lea     rax, flags
mov     dword ptr [rax+10h], 1
jmp     loc_40E1F8
lea     rax, flags
mov     dword ptr [rax+14h], 1
jmp     loc_40E1F8
lea     rax, flags
mov     dword ptr [rax+1Ch], 2
jmp     loc_40E1F8
lea     rax, flags
mov     dword ptr [rax+4], 1
jmp     loc_40E1F8
lea     rax, flags
mov     dword ptr [rax+1Ch], 2
mov     [rbp+doprintversion], 1
jmp     loc_40E1F8
mov     eax, 0
call    showunitsfile
mov     edi, 0
call    _exit
mov     rax, cs:optarg_ptr
mov     rax, [rax]
mov     [rbp+unitsys], rax
mov     [rbp+ind], 0
jmp     short loc_40E18D
mov     eax, [rbp-2Ch]
movsxd  rdx, eax
mov     rax, [rbp-20h]
lea     rbx, [rdx+rax]
mov     eax, [rbp-2Ch]
movsxd  rdx, eax
mov     rax, [rbp-20h]
add     rax, rdx
movzx   eax, byte ptr [rax]
movsx   eax, al
mov     edi, eax
call    _tolower
mov     [rbx], al
add     [rbp+ind], 1
mov     eax, [rbp-2Ch]
movsxd  rdx, eax
mov     rax, [rbp-20h]
add     rax, rdx
movzx   eax, byte ptr [rax]
test    al, al
jnz     short loc_40E15F
jmp     short loc_40E1F8
mov     eax, 0
call    usage
mov     edi, 0
call    _exit
mov     rax, cs:optarg_ptr
mov     rax, [rax]
movzx   eax, byte ptr [rax]
test    al, al
jnz     short loc_40E1D8
lea     rax, historyfile
mov     qword ptr [rax], 0
jmp     short loc_40E1F8
mov     rax, cs:optarg_ptr
mov     rdx, [rax]
lea     rax, historyfile
mov     [rax], rdx
jmp     short loc_40E1F8
mov     eax, 0
call    helpmsg
lea     rax, shortoptions
mov     rdx, [rax]
lea     rcx, [rbp-30h]
mov     rsi, [rbp-40h]
mov     eax, [rbp-34h]
mov     r8, rcx
lea     rcx, longoptions
mov     edi, eax
call    _getopt_long
mov     [rbp+optchar], eax
cmp     [rbp+optchar], 0FFFFFFFFh
jnz     loc_40DE68
cmp     [rbp+doprintversion], 0
jz      short loc_40E245
mov     eax, 0
call    printversion
mov     edi, 0
call    _exit
cmp     [rbp+unitsys], 0
jz      short loc_40E264
mov     rax, [rbp-20h]
mov     edx, 1
mov     rsi, rax
lea     rdi, aUnitsSystem
call    _setenv
lea     rax, flags
mov     eax, [rax+18h]
test    eax, eax
jz      short loc_40E2B6
mov     rax, cs:optind_ptr
mov     eax, [rax]
cmp     eax, [rbp-34h]
jz      loc_40E3CF
mov     rax, cs:stderr_ptr
mov     rax, [rax]
mov     rcx, rax
mov     edx, 38h
mov     esi, 1
lea     rdi, aTooManyArgumen
call    _fwrite
mov     eax, 0
call    helpmsg
jmp     loc_40E3CF
mov     eax, [rbp-34h]
lea     edx, [rax-2]
mov     rax, cs:optind_ptr
mov     eax, [rax]
cmp     edx, eax
jnz     short loc_40E338
lea     rax, flags
mov     dword ptr [rax+8], 1
mov     rax, cs:optind_ptr
mov     eax, [rax]
cdqe
lea     rdx, [rax*8+0]
mov     rax, [rbp-40h]
add     rax, rdx
mov     rdx, [rax]
mov     rax, [rbp-48h]
mov     [rax], rdx
mov     rax, cs:optind_ptr
mov     eax, [rax]
cdqe
add     rax, 1
lea     rdx, [rax*8+0]
mov     rax, [rbp-40h]
add     rax, rdx
mov     rax, [rax]
mov     rdi, rax
call    dupstr
mov     rdx, rax
mov     rax, [rbp-50h]
mov     [rax], rdx
mov     eax, 0
jmp     loc_40E3D4
mov     eax, [rbp-34h]
lea     edx, [rax-1]
mov     rax, cs:optind_ptr
mov     eax, [rax]
cmp     edx, eax
jnz     short loc_40E38F
lea     rax, flags
mov     dword ptr [rax+8], 1
mov     rax, cs:optind_ptr
mov     eax, [rax]
cdqe
lea     rdx, [rax*8+0]
mov     rax, [rbp-40h]
add     rax, rdx
mov     rdx, [rax]
mov     rax, [rbp-48h]
mov     [rax], rdx
mov     rax, [rbp-50h]
mov     qword ptr [rax], 0
mov     eax, 0
jmp     short loc_40E3D4
mov     eax, [rbp-34h]
lea     edx, [rax-2]
mov     rax, cs:optind_ptr
mov     eax, [rax]
cmp     edx, eax
jle     short loc_40E3CF
mov     rax, cs:stderr_ptr
mov     rax, [rax]
mov     rcx, rax
mov     edx, 2Ch
mov     esi, 1
lea     rdi, aTooManyArgumen_0
call    _fwrite
mov     eax, 0
call    helpmsg
mov     eax, 1
mov     rbx, [rbp-18h]
xor     rbx, fs:28h
jz      short loc_40E3E8
call    ___stack_chk_fail
add     rsp, 48h
pop     rbx
pop     rbp
retn