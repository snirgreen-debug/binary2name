push    rbp
mov     rbp, rsp
sub     rsp, 40h
mov     [rbp+p], rdi
mov     [rbp+pn], rsi
mov     [rbp+s], rdx
mov     rax, fs:28h
mov     [rbp+var_8], rax
xor     eax, eax
mov     rax, [rbp-30h]
mov     rax, [rax]
mov     [rbp+n], rax
cmp     [rbp+p], 0
jnz     short loc_40EE80
cmp     [rbp+n], 0
jnz     short loc_40EE4F
mov     eax, 80h
mov     edx, 0
div     qword ptr [rbp-38h]
mov     [rbp+n], rax
cmp     [rbp+n], 0
setz    al
movzx   eax, al
add     [rbp+n], rax
mov     ecx, 0
mov     rax, [rbp-10h]
mul     qword ptr [rbp-38h]
jno     short loc_40EE63
mov     ecx, 1
test    rax, rax
jns     short loc_40EE6D
mov     ecx, 1
mov     [rbp+__xalloc_count], rax
mov     rax, rcx
and     eax, 1
test    al, al
jz      short loc_40EEB7
call    xalloc_die
mov     rax, 5555555555555554h
mov     edx, 0
div     qword ptr [rbp-38h]
cmp     rax, [rbp-10h]
ja      short loc_40EE9E
call    xalloc_die
mov     rax, [rbp-10h]
shr     rax, 1
mov     rdx, rax
mov     rax, [rbp-10h]
add     rax, rdx
add     rax, 1
mov     [rbp+n], rax
mov     rax, [rbp-30h]
mov     rdx, [rbp-10h]
mov     [rax], rdx
mov     rax, [rbp-10h]
imul    rax, [rbp-38h]
mov     rdx, rax
mov     rax, [rbp-28h]
mov     rsi, rdx
mov     rdi, rax
call    xrealloc
mov     rsi, [rbp-8]
xor     rsi, fs:28h
jz      short locret_40EEF1
call    ___stack_chk_fail
leave
retn