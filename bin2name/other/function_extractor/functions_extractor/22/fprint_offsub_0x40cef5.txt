push    rbp
mov     rbp, rsp
add     rsp, 0FFFFFFFFFFFFFF80h
mov     [rbp+file], rdi
mov     [rbp+offset], rsi
mov     [rbp+width], edx
mov     rax, fs:28h
mov     [rbp+var_8], rax
xor     eax, eax
lea     rax, [rbp-50h]
add     rax, 40h
mov     [rbp+p], rax
cmp     [rbp+offset], 0
jns     loc_40CFB9
sub     [rbp+p], 1
mov     rcx, [rbp-70h]
mov     rdx, 6666666666666667h
mov     rax, rcx
imul    rdx
sar     rdx, 2
mov     rax, rcx
sar     rax, 3Fh
sub     rdx, rax
mov     rax, rdx
shl     rax, 2
add     rax, rdx
add     rax, rax
sub     rcx, rax
mov     rdx, rcx
mov     eax, edx
mov     edx, 30h
sub     edx, eax
mov     eax, edx
mov     edx, eax
mov     rax, [rbp-58h]
mov     [rax], dl
mov     rcx, [rbp-70h]
mov     rdx, 6666666666666667h
mov     rax, rcx
imul    rdx
sar     rdx, 2
mov     rax, rcx
sar     rax, 3Fh
sub     rdx, rax
mov     rax, rdx
mov     [rbp+offset], rax
cmp     [rbp+offset], 0
jnz     short loc_40CF2E
sub     [rbp+p], 1
mov     rax, [rbp-58h]
mov     byte ptr [rax], 2Dh
jmp     short loc_40D030
sub     [rbp+p], 1
mov     rcx, [rbp-70h]
mov     rdx, 6666666666666667h
mov     rax, rcx
imul    rdx
sar     rdx, 2
mov     rax, rcx
sar     rax, 3Fh
sub     rdx, rax
mov     rax, rdx
shl     rax, 2
add     rax, rdx
add     rax, rax
sub     rcx, rax
mov     rdx, rcx
mov     eax, edx
add     eax, 30h
mov     edx, eax
mov     rax, [rbp-58h]
mov     [rax], dl
mov     rcx, [rbp-70h]
mov     rdx, 6666666666666667h
mov     rax, rcx
imul    rdx
sar     rdx, 2
mov     rax, rcx
sar     rax, 3Fh
sub     rdx, rax
mov     rax, rdx
mov     [rbp+offset], rax
cmp     [rbp+offset], 0
jnz     short loc_40CFB9
mov     edx, [rbp-74h]
lea     rax, [rbp-50h]
add     rax, 40h
mov     rcx, rax
mov     rax, [rbp-58h]
sub     rcx, rax
mov     rax, rcx
sub     edx, eax
mov     eax, edx
mov     [rbp+width], eax
jmp     short loc_40D062
mov     rax, [rbp-68h]
mov     rsi, rax
mov     edi, 20h
call    __IO_putc
mov     eax, [rbp-74h]
lea     edx, [rax-1]
mov     [rbp+width], edx
test    eax, eax
jg      short loc_40D051
jmp     short loc_40D08E
mov     rax, [rbp-58h]
movzx   eax, byte ptr [rax]
movsx   eax, al
mov     rdx, [rbp-68h]
mov     rsi, rdx
mov     edi, eax
call    __IO_putc
add     [rbp+p], 1
lea     rax, [rbp-50h]
add     rax, 40h
cmp     rax, [rbp-58h]
ja      short loc_40D071
nop
mov     rax, [rbp-8]
xor     rax, fs:28h
jz      short locret_40D0B1
call    ___stack_chk_fail
leave
retn