push    rbp
mov     rbp, rsp
sub     rsp, 40h
mov     [rbp+var_38], rdi
mov     [rbp+var_40], rsi
mov     rax, [rbp-38h]
mov     rax, [rax+20h]
mov     [rbp+var_18], rax
cmp     [rbp+var_18], 0
jz      short loc_426D64
mov     rax, [rbp-18h]
mov     rdi, rax
call    _strlen
mov     [rbp+var_24], eax
mov     rax, [rbp-40h]
lea     rdx, [rax+1]
mov     [rbp+var_40], rdx
mov     byte ptr [rax], 2Fh
mov     eax, [rbp-24h]
movsxd  rdx, eax
mov     rcx, [rbp-18h]
mov     rax, [rbp-40h]
mov     rsi, rcx
mov     rdi, rax
call    _memcpy
mov     eax, [rbp-24h]
cdqe
add     [rbp+var_40], rax
mov     rax, [rbp-38h]
mov     rax, [rax+28h]
mov     [rbp+var_10], rax
cmp     [rbp+var_10], 0
jz      short loc_426DB7
mov     rax, [rbp-10h]
mov     rdi, rax
call    _strlen
mov     [rbp+var_20], eax
mov     rax, [rbp-40h]
lea     rdx, [rax+1]
mov     [rbp+var_40], rdx
mov     byte ptr [rax], 3Bh
mov     eax, [rbp-20h]
movsxd  rdx, eax
mov     rcx, [rbp-10h]
mov     rax, [rbp-40h]
mov     rsi, rcx
mov     rdi, rax
call    _memcpy
mov     eax, [rbp-20h]
cdqe
add     [rbp+var_40], rax
mov     rax, [rbp-38h]
mov     rax, [rax+30h]
mov     [rbp+var_8], rax
cmp     [rbp+var_8], 0
jz      short loc_426E0A
mov     rax, [rbp-8]
mov     rdi, rax
call    _strlen
mov     [rbp+var_1C], eax
mov     rax, [rbp-40h]
lea     rdx, [rax+1]
mov     [rbp+var_40], rdx
mov     byte ptr [rax], 3Fh
mov     eax, [rbp-1Ch]
movsxd  rdx, eax
mov     rcx, [rbp-8]
mov     rax, [rbp-40h]
mov     rsi, rcx
mov     rdi, rax
call    _memcpy
mov     eax, [rbp-1Ch]
cdqe
add     [rbp+var_40], rax
nop
leave
retn