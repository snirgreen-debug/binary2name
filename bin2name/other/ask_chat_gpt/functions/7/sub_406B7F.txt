push    rbp
mov     rbp, rsp
sub     rsp, 110h
mov     [rbp+var_F8], rdi
mov     [rbp+var_100], rsi
mov     [rbp+var_108], rdx
mov     rax, fs:28h
mov     [rbp+var_8], rax
xor     eax, eax
mov     rax, [rbp-100h]
mov     rdi, rax
call    sub_40B874
mov     [rbp+var_C0], rax
mov     rax, 492492492492492h
cmp     [rbp+var_C0], rax
ja      loc_406C75
mov     rax, [rbp-0C0h]
shl     rax, 3
lea     rdx, [rax*8+0]
sub     rdx, rax
mov     rax, rdx
cmp     rax, 0FAFh
ja      short loc_406C52
mov     rax, [rbp-0C0h]
shl     rax, 3
lea     rdx, [rax*8+0]
sub     rdx, rax
mov     rax, rdx
add     rax, 10h
lea     rdx, [rax+0Fh]
mov     eax, 10h
sub     rax, 1
add     rax, rdx
mov     ecx, 10h
mov     edx, 0
div     rcx
imul    rax, 10h
sub     rsp, rax
mov     rax, rsp
add     rax, 0Fh
shr     rax, 4
shl     rax, 4
add     rax, 10h
jmp     short loc_406C7A
mov     rax, [rbp-0C0h]
shl     rax, 3
lea     rdx, [rax*8+0]
sub     rdx, rax
mov     rax, rdx
mov     rdi, rax
call    sub_40B5C9
jmp     short loc_406C7A
mov     eax, 0
mov     [rbp+var_B8], rax
cmp     [rbp+var_B8], 0
jnz     short loc_406C95
mov     eax, 0
jmp     loc_40729B
mov     rax, [rbp-0B8h]
mov     [rbp+var_B0], rax
mov     rdx, [rbp-0C0h]
mov     rax, rdx
add     rax, rax
add     rax, rdx
shl     rax, 4
mov     rdx, rax
mov     rax, [rbp-0B0h]
add     rax, rdx
mov     [rbp+var_A8], rax
mov     rax, [rbp-0A8h]
mov     [rbp+var_A0], rax
mov     [rbp+var_E8], 0
mov     rax, [rbp-100h]
mov     [rbp+s2], rax
mov     [rbp+var_50], 0
lea     rax, [rbp-50h]
add     rax, 4
mov     edx, 8
mov     esi, 0
mov     rdi, rax
call    _memset
mov     [rbp+var_44], 0
jmp     short loc_406D62
mov     rdx, [rbp-0E8h]
mov     rax, rdx
add     rax, rax
add     rax, rdx
shl     rax, 4
mov     rdx, rax
mov     rax, [rbp-0B0h]
add     rax, rdx
lea     rdx, [rbp-50h]
add     rdx, 10h
mov     rsi, rdx
mov     rdi, rax
call    sub_40B79C
mov     rdx, [rbp-40h]
mov     rax, [rbp-38h]
add     rax, rdx
mov     [rbp+s2], rax
mov     [rbp+var_44], 0
add     [rbp+var_E8], 1
lea     rax, [rbp-50h]
mov     rdi, rax
call    sub_407A5B
movzx   eax, byte ptr [rbp-30h]
xor     eax, 1
test    al, al
jnz     short loc_406D80
mov     eax, [rbp-2Ch]
test    eax, eax
jz      short loc_406D87
mov     eax, 1
jmp     short loc_406D8C
mov     eax, 0
test    eax, eax
jnz     short loc_406D13
mov     rax, [rbp-0A0h]
add     rax, 8
mov     qword ptr [rax], 1
mov     [rbp+var_D8], 0
mov     [rbp+var_E0], 2
jmp     loc_406F7C
mov     rdx, [rbp-0E0h]
mov     rax, rdx
add     rax, rax
add     rax, rdx
shl     rax, 4
lea     rdx, [rax-30h]
mov     rax, [rbp-0B0h]
add     rax, rdx
mov     [rbp+var_98], rax
mov     rax, [rbp-98h]
movzx   eax, byte ptr [rax+10h]
test    al, al
jz      short loc_406E56
mov     rdx, [rbp-0D8h]
mov     rax, rdx
add     rax, rax
add     rax, rdx
shl     rax, 4
mov     rdx, rax
mov     rax, [rbp-0B0h]
add     rax, rdx
movzx   eax, byte ptr [rax+10h]
test    al, al
jz      short loc_406E56
mov     rax, [rbp-98h]
mov     ecx, [rax+14h]
mov     rdx, [rbp-0D8h]
mov     rax, rdx
add     rax, rax
add     rax, rdx
shl     rax, 4
mov     rdx, rax
mov     rax, [rbp-0B0h]
add     rax, rdx
mov     eax, [rax+14h]
cmp     ecx, eax
setz    al
jmp     loc_406EE5
mov     rax, [rbp-98h]
mov     rcx, [rax+8]
mov     rdx, [rbp-0D8h]
mov     rax, rdx
add     rax, rax
add     rax, rdx
shl     rax, 4
mov     rdx, rax
mov     rax, [rbp-0B0h]
add     rax, rdx
mov     rax, [rax+8]
cmp     rcx, rax
jnz     short loc_406EDD
mov     rax, [rbp-98h]
mov     rsi, [rax+8]
mov     rdx, [rbp-0D8h]
mov     rax, rdx
add     rax, rax
add     rax, rdx
shl     rax, 4
mov     rdx, rax
mov     rax, [rbp-0B0h]
add     rax, rdx
mov     rcx, [rax]
mov     rax, [rbp-98h]
mov     rax, [rax]
mov     rdx, rsi
mov     rsi, rcx
mov     rdi, rax
call    _memcmp
test    eax, eax
jnz     short loc_406EDD
mov     eax, 1
jmp     short loc_406EE2
mov     eax, 0
and     eax, 1
test    al, al
jz      short loc_406F1D
mov     rax, [rbp-0E0h]
lea     rdx, [rax*8+0]
mov     rax, [rbp-0A0h]
add     rdx, rax
add     [rbp+var_D8], 1
mov     rax, [rbp-0E0h]
sub     rax, [rbp-0D8h]
mov     [rdx], rax
jmp     short loc_406F74
cmp     [rbp+var_D8], 0
jnz     short loc_406F4C
mov     rax, [rbp-0E0h]
lea     rdx, [rax*8+0]
mov     rax, [rbp-0A0h]
add     rdx, rax
mov     rax, [rbp-0E0h]
mov     [rdx], rax
jmp     short loc_406F74
mov     rax, [rbp-0D8h]
lea     rdx, [rax*8+0]
mov     rax, [rbp-0A0h]
add     rax, rdx
mov     rax, [rax]
sub     [rbp+var_D8], rax
jmp     loc_406DE6
add     [rbp+var_E0], 1
mov     rax, [rbp-0E0h]
cmp     rax, [rbp-0C0h]
jb      loc_406DBD
mov     rax, [rbp-108h]
mov     qword ptr [rax], 0
mov     [rbp+var_D0], 0
mov     rax, [rbp-0F8h]
mov     [rbp+var_80], rax
mov     [rbp+var_90], 0
lea     rax, [rbp-90h]
add     rax, 4
mov     edx, 8
mov     esi, 0
mov     rdi, rax
call    _memset
mov     [rbp+var_84], 0
mov     rax, [rbp-0F8h]
mov     [rbp+s2], rax
mov     [rbp+var_50], 0
lea     rax, [rbp-50h]
add     rax, 4
mov     edx, 8
mov     esi, 0
mov     rdi, rax
call    _memset
mov     [rbp+var_44], 0
jmp     loc_407255
mov     rdx, [rbp-0D0h]
mov     rax, rdx
add     rax, rax
add     rax, rdx
shl     rax, 4
mov     rdx, rax
mov     rax, [rbp-0B0h]
add     rax, rdx
movzx   eax, byte ptr [rax+10h]
test    al, al
jz      short loc_407073
movzx   eax, byte ptr [rbp-30h]
test    al, al
jz      short loc_407073
mov     rdx, [rbp-0D0h]
mov     rax, rdx
add     rax, rax
add     rax, rdx
shl     rax, 4
mov     rdx, rax
mov     rax, [rbp-0B0h]
add     rax, rdx
mov     edx, [rax+14h]
mov     eax, [rbp-2Ch]
cmp     edx, eax
setz    al
jmp     loc_40710F
mov     rdx, [rbp-0D0h]
mov     rax, rdx
add     rax, rax
add     rax, rdx
shl     rax, 4
mov     rdx, rax
mov     rax, [rbp-0B0h]
add     rax, rdx
mov     rdx, [rax+8]
mov     rax, [rbp-38h]
cmp     rdx, rax
jnz     short loc_407107
mov     rdx, [rbp-0D0h]
mov     rax, rdx
add     rax, rax
add     rax, rdx
shl     rax, 4
mov     rdx, rax
mov     rax, [rbp-0B0h]
add     rax, rdx
mov     rsi, [rax+8]
mov     rcx, [rbp-40h]
mov     rdx, [rbp-0D0h]
mov     rax, rdx
add     rax, rax
add     rax, rdx
shl     rax, 4
mov     rdx, rax
mov     rax, [rbp-0B0h]
add     rax, rdx
mov     rax, [rax]
mov     rdx, rsi
mov     rsi, rcx
mov     rdi, rax
call    _memcmp
test    eax, eax
jnz     short loc_407107
mov     eax, 1
jmp     short loc_40710C
mov     eax, 0
and     eax, 1
test    al, al
jz      short loc_407155
add     [rbp+var_D0], 1
mov     rdx, [rbp-40h]
mov     rax, [rbp-38h]
add     rax, rdx
mov     [rbp+s2], rax
mov     [rbp+var_44], 0
mov     rax, [rbp-0D0h]
cmp     rax, [rbp-0C0h]
jnz     loc_407255
mov     rdx, [rbp-80h]
mov     rax, [rbp-108h]
mov     [rax], rdx
jmp     loc_407287
cmp     [rbp+var_D0], 0
jz      loc_4071F6
mov     rax, [rbp-0D0h]
lea     rdx, [rax*8+0]
mov     rax, [rbp-0A0h]
add     rax, rdx
mov     rax, [rax]
mov     [rbp+var_C8], rax
mov     rax, [rbp-0C8h]
sub     [rbp+var_D0], rax
jmp     short loc_4071EA
lea     rax, [rbp-90h]
mov     rdi, rax
call    sub_407A5B
movzx   eax, byte ptr [rbp-70h]
xor     eax, 1
test    al, al
jnz     short loc_4071B7
mov     eax, [rbp-6Ch]
test    eax, eax
jz      short loc_4071BE
mov     eax, 1
jmp     short loc_4071C3
mov     eax, 0
test    eax, eax
jnz     short loc_4071CC
call    _abort
mov     rdx, [rbp-80h]
mov     rax, [rbp-78h]
add     rax, rdx
mov     [rbp+var_80], rax
mov     [rbp+var_84], 0
sub     [rbp+var_C8], 1
cmp     [rbp+var_C8], 0
jnz     short loc_407196
jmp     short loc_407255
lea     rax, [rbp-90h]
mov     rdi, rax
call    sub_407A5B
movzx   eax, byte ptr [rbp-70h]
xor     eax, 1
test    al, al
jnz     short loc_407217
mov     eax, [rbp-6Ch]
test    eax, eax
jz      short loc_40721E
mov     eax, 1
jmp     short loc_407223
mov     eax, 0
test    eax, eax
jnz     short loc_40722C
call    _abort
mov     rdx, [rbp-80h]
mov     rax, [rbp-78h]
add     rax, rdx
mov     [rbp+var_80], rax
mov     [rbp+var_84], 0
mov     rdx, [rbp-40h]
mov     rax, [rbp-38h]
add     rax, rdx
mov     [rbp+s2], rax
mov     [rbp+var_44], 0
lea     rax, [rbp-50h]
mov     rdi, rax
call    sub_407A5B
movzx   eax, byte ptr [rbp-30h]
xor     eax, 1
test    al, al
jnz     short loc_407273
mov     eax, [rbp-2Ch]
test    eax, eax
jz      short loc_40727A
mov     eax, 1
jmp     short loc_40727F
mov     eax, 0
test    eax, eax
jnz     loc_407011
mov     rax, [rbp-0B8h]
mov     rdi, rax
call    sub_40B68C
mov     eax, 1
mov     rcx, [rbp-8]
xor     rcx, fs:28h
jz      short locret_4072AF
call    ___stack_chk_fail
leave
retn