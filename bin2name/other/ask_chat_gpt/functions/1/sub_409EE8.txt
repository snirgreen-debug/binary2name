push    rbp
mov     rbp, rsp
sub     rsp, 0D0h
mov     [rbp+var_B4], edi
mov     [rbp+var_C0], rsi
mov     [rbp+var_C8], rdx
mov     rax, fs:28h
mov     [rbp+var_8], rax
xor     eax, eax
lea     rax, [rbp-0A0h]
add     rax, 8
mov     rdi, rax
call    _sigemptyset
mov     [rbp+var_18], 0
mov     [rbp+var_A8], 0
jmp     loc_40A021
mov     eax, [rbp-0A8h]
cdqe
shl     rax, 4
mov     rdx, rax
mov     rax, [rbp-0C0h]
add     rax, rdx
mov     rax, [rax+8]
mov     [rbp+var_A0], rax
cmp     [rbp+var_C8], 0
jz      short loc_409F99
mov     eax, [rbp-0A8h]
movsxd  rdx, eax
mov     rax, rdx
shl     rax, 3
add     rax, rdx
add     rax, rax
add     rax, rdx
shl     rax, 3
mov     rdx, rax
mov     rax, [rbp-0C8h]
add     rdx, rax
jmp     short loc_409F9E
mov     edx, 0
mov     eax, [rbp-0A8h]
cdqe
shl     rax, 4
mov     rcx, rax
mov     rax, [rbp-0C0h]
add     rax, rcx
mov     eax, [rax]
lea     rcx, [rbp-0A0h]
mov     rsi, rcx
mov     edi, eax
call    _sigaction
test    eax, eax
jz      short loc_40A01A
cmp     [rbp+var_C8], 0
jz      short loc_40A013
call    ___errno_location
mov     eax, [rax]
mov     [rbp+var_A4], eax
mov     rdx, [rbp-0C8h]
mov     rcx, [rbp-0C0h]
mov     eax, [rbp-0A8h]
mov     rsi, rcx
mov     edi, eax
call    sub_409D0C
call    ___errno_location
mov     rdx, rax
mov     eax, [rbp-0A4h]
mov     [rdx], eax
mov     eax, 0FFFFFFFFh
jmp     short loc_40A038
add     [rbp+var_A8], 1
mov     eax, [rbp-0A8h]
cmp     eax, [rbp-0B4h]
jl      loc_409F3F
mov     eax, 0
mov     rsi, [rbp-8]
xor     rsi, fs:28h
jz      short locret_40A04C
call    ___stack_chk_fail
leave
retn