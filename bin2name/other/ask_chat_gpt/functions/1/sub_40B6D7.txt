push    rbp
mov     rbp, rsp
sub     rsp, 50h
mov     [rbp+var_38], rdi
mov     [rbp+var_3C], esi
mov     [rbp+var_48], rdx
mov     rax, fs:28h
mov     [rbp+var_8], rax
xor     eax, eax
cmp     [rbp+var_38], 0
jz      loc_40B93F
mov     rax, [rbp-38h]
mov     eax, [rax]
cmp     eax, 1
jz      loc_40B840
cmp     eax, 2
jz      loc_40B8D5
test    eax, eax
jnz     loc_40B940
mov     eax, [rbp-3Ch]
and     eax, 10000h
mov     ecx, eax
mov     rax, [rbp-38h]
mov     rax, [rax+28h]
lea     rdx, [rbp-28h]
mov     esi, ecx
mov     rdi, rax
call    sub_4194C6
mov     [rbp+var_18], rax
mov     eax, [rbp-3Ch]
and     eax, 4000h
test    eax, eax
jz      short loc_40B75D
mov     [rbp+var_28], 1
jmp     short loc_40B770
mov     eax, [rbp-3Ch]
and     eax, 8000h
test    eax, eax
jz      short loc_40B770
mov     [rbp+var_28], 0
mov     eax, [rbp-28h]
test    eax, eax
jz      loc_40B81C
mov     rax, [rbp-18h]
add     rax, 1
mov     rdi, rax
call    sub_40C49E
mov     [rbp+var_10], rax
mov     eax, [rbp-3Ch]
and     eax, 10000h
mov     edx, eax
mov     rax, [rbp-38h]
mov     rcx, [rax+28h]
mov     rax, [rbp-10h]
mov     rsi, rcx
mov     rdi, rax
call    sub_419A38
mov     rdx, [rbp-10h]
mov     rax, [rbp-18h]
add     rax, rdx
mov     byte ptr [rax], 0
mov     rax, [rbp-48h]
mov     rax, [rax]
mov     rdx, [rbp-48h]
mov     rdx, [rdx+8]
mov     rsi, rdx
mov     edi, 423DDDh
call    rax
mov     rax, [rbp-48h]
mov     rax, [rax]
mov     rdx, [rbp-48h]
mov     rcx, [rdx+8]
mov     rdx, [rbp-10h]
mov     rsi, rcx
mov     rdi, rdx
call    rax
mov     rax, [rbp-48h]
mov     rax, [rax]
mov     rdx, [rbp-48h]
mov     rdx, [rdx+8]
mov     rsi, rdx
mov     edi, 423DDDh
call    rax
mov     rax, [rbp-10h]
mov     rdi, rax
call    sub_40C47F
jmp     loc_40B940
mov     rax, [rbp-48h]
mov     rax, [rax]
mov     rdx, [rbp-48h]
mov     rcx, [rdx+8]
mov     rdx, [rbp-38h]
mov     rdx, [rdx+28h]
mov     rsi, rcx
mov     rdi, rdx
call    rax
jmp     loc_40B940
mov     rax, [rbp-48h]
mov     rax, [rax]
mov     rdx, [rbp-48h]
mov     rdx, [rdx+8]
mov     rsi, rdx
mov     edi, 423DDFh
call    rax
mov     rax, [rbp-38h]
mov     rax, [rax+28h]
mov     rax, [rax]
mov     [rbp+var_20], rax
jmp     short loc_40B8B3
mov     rax, [rbp-20h]
mov     rax, [rax+10h]
mov     rdx, [rbp-48h]
mov     ecx, [rbp-3Ch]
mov     esi, ecx
mov     rdi, rax
call    sub_40B6D7
mov     rax, [rbp-20h]
mov     rax, [rax]
test    rax, rax
jz      short loc_40B8A8
mov     rax, [rbp-48h]
mov     rax, [rax]
mov     rdx, [rbp-48h]
mov     rdx, [rdx+8]
mov     rsi, rdx
mov     edi, 423DE1h
call    rax
mov     rax, [rbp-20h]
mov     rax, [rax]
mov     [rbp+var_20], rax
cmp     [rbp+var_20], 0
jnz     short loc_40B86A
mov     rax, [rbp-48h]
mov     rax, [rax]
mov     rdx, [rbp-48h]
mov     rdx, [rdx+8]
mov     rsi, rdx
mov     edi, 423DE4h
call    rax
jmp     short loc_40B940
mov     [rbp+var_24], 0
jmp     short loc_40B92A
cmp     [rbp+var_24], 0
jz      short loc_40B8FD
mov     rax, [rbp-48h]
mov     rax, [rax]
mov     rdx, [rbp-48h]
mov     rdx, [rdx+8]
mov     rsi, rdx
mov     edi, 423DE6h
call    rax
mov     rax, [rbp-38h]
mov     rax, [rax+30h]
mov     edx, [rbp-24h]
movsxd  rdx, edx
shl     rdx, 3
add     rax, rdx
mov     rax, [rax]
mov     rdx, [rbp-48h]
mov     ecx, [rbp-3Ch]
mov     esi, ecx
mov     rdi, rax
call    sub_40B6D7
add     [rbp+var_24], 1
mov     eax, [rbp-24h]
movsxd  rdx, eax
mov     rax, [rbp-38h]
mov     rax, [rax+28h]
cmp     rdx, rax
jb      short loc_40B8DE
jmp     short loc_40B940
nop
mov     rax, [rbp-8]
xor     rax, fs:28h
jz      short locret_40B954
call    ___stack_chk_fail
leave
retn