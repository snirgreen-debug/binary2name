{
    "GNN_DATA": {
        "edges": [
            {
                "dst": 4203116,
                "src": 4203080
            },
            {
                "dst": 4203110,
                "src": 4203080
            },
            {
                "dst": 4203121,
                "src": 4203116
            },
            {
                "dst": "loopSeerDum",
                "src": 4203121
            },
            {
                "dst": 4203121,
                "src": 4203110
            }
        ],
        "nodes": [
            {
                "block_addr": 4203080,
                "constraints": [
                    [
                        0,
                        []
                    ]
                ],
                "instructions": "push|rbp|    |mov|rbp|rsp|    |mov|qword|ptr|rbp|-|0x28|rdi|    |mov|eax|esi|    |mov|dword|ptr|rbp|-|0x30|edx|    |mov|byte|ptr|rbp|-|0x2c|al|    |movzx|eax|byte|ptr|rbp|-|0x2c|    |mov|byte|ptr|rbp|-|0x11|al|    |cmp|qword|ptr|rbp|-|0x28|0|    |je|target_0|    "
            },
            {
                "block_addr": 4203116,
                "constraints": [
                    [
                        1,
                        [
                            "<Bool __eq__(reg_48_1047_64, 0x0)>"
                        ]
                    ]
                ],
                "instructions": "mov|eax|0x608300|    |lea|rdx|rax|+|8|    |movzx|eax|byte|ptr|rbp|-|0x11|    |shr|al|5|    |movzx|eax|al|    |shl|rax|2|    |add|rax|rdx|    |mov|qword|ptr|rbp|-|8|rax|    |movzx|eax|byte|ptr|rbp|-|0x11|    |and|eax|0x1f|    |mov|dword|ptr|rbp|-|0x10|eax|    |mov|rax|qword|ptr|rbp|-|8|    |mov|edx|dword|ptr|rax|    |mov|eax|dword|ptr|rbp|-|0x10|    |mov|ecx|eax|    |shr|edx|cl|    |mov|eax|edx|    |and|eax|1|    |mov|dword|ptr|rbp|-|0xc|eax|    |mov|rax|qword|ptr|rbp|-|8|    |mov|edx|dword|ptr|rax|    |mov|eax|dword|ptr|rbp|-|0x30|    |and|eax|1|    |xor|eax|dword|ptr|rbp|-|0xc|    |mov|esi|eax|    |mov|eax|dword|ptr|rbp|-|0x10|    |mov|ecx|eax|    |shl|esi|cl|    |mov|eax|esi|    |xor|edx|eax|    |mov|rax|qword|ptr|rbp|-|8|    |mov|dword|ptr|rax|edx|    |mov|eax|dword|ptr|rbp|-|0xc|    |pop|rbp|    |ret|    "
            },
            {
                "block_addr": 4203121,
                "constraints": [
                    [
                        2,
                        []
                    ],
                    [
                        2,
                        []
                    ]
                ],
                "instructions": "lea|rdx|rax|+|8|    |movzx|eax|byte|ptr|rbp|-|0x11|    |shr|al|5|    |movzx|eax|al|    |shl|rax|2|    |add|rax|rdx|    |mov|qword|ptr|rbp|-|8|rax|    |movzx|eax|byte|ptr|rbp|-|0x11|    |and|eax|0x1f|    |mov|dword|ptr|rbp|-|0x10|eax|    |mov|rax|qword|ptr|rbp|-|8|    |mov|edx|dword|ptr|rax|    |mov|eax|dword|ptr|rbp|-|0x10|    |mov|ecx|eax|    |shr|edx|cl|    |mov|eax|edx|    |and|eax|1|    |mov|dword|ptr|rbp|-|0xc|eax|    |mov|rax|qword|ptr|rbp|-|8|    |mov|edx|dword|ptr|rax|    |mov|eax|dword|ptr|rbp|-|0x30|    |and|eax|1|    |xor|eax|dword|ptr|rbp|-|0xc|    |mov|esi|eax|    |mov|eax|dword|ptr|rbp|-|0x10|    |mov|ecx|eax|    |shl|esi|cl|    |mov|eax|esi|    |xor|edx|eax|    |mov|rax|qword|ptr|rbp|-|8|    |mov|dword|ptr|rax|edx|    |mov|eax|dword|ptr|rbp|-|0xc|    |pop|rbp|    |ret|    "
            },
            {
                "block_addr": "loopSeerDum",
                "constraints": [
                    [
                        3,
                        [
                            "<Bool Or(__eq__(__add__(0x608308, Concat(0x0, Extract(7, 5, reg_40_1048_64), 0)), 0x608308), __eq__(__add__(0x608308, Concat(0x0, Extract(7, 5, reg_40_1048_64), 0)), 0x608324), __eq__(__add__(0x608308, Concat(0x0, Extract(7, 5, reg_40_1048_64), 0)), 0x60830c), __eq__(__add__(0x608308, Concat(0x0, Extract(7, 5, reg_40_1048_64), 0)), 0x608320), __eq__(__add__(0x608308, Concat(0x0, Extract(7, 5, reg_40_1048_64), 0)), 0x608310), __eq__(__add__(0x608308, Concat(0x0, Extract(7, 5, reg_40_1048_64), 0)), 0x60831c), __eq__(__add__(0x608308, Concat(0x0, Extract(7, 5, reg_40_1048_64), 0)), 0x608314), __eq__(__add__(0x608308, Concat(0x0, Extract(7, 5, reg_40_1048_64), 0)), 0x608318))>",
                            "<Bool __eq__(__add__(0x608308, Concat(0x0, Extract(7, 5, reg_40_1048_64), 0)), 0x608324)>",
                            "<BV32 Extract(31, 0, Concat(0x0, Extract(0, 0, LShR(Concat(0x0, If(Or(__eq__(Extract(7, 5, reg_40_1048_64), 3), __eq__(Extract(7, 5, reg_40_1048_64), 5), __eq__(Extract(7, 5, reg_40_1048_64), 6), __eq__(Extract(7, 5, reg_40_1048_64), 1), __eq__(Extract(7, 5, reg_40_1048_64), 4), __eq__(Extract(7, 5, reg_40_1048_64), 0), __eq__(Extract(7, 5, reg_40_1048_64), 2), __eq__(Extract(7, 5, reg_40_1048_64), 7)), 0x0, 0xc0deb4be)), Concat(0x0, Extract(4, 0, reg_40_1048_64))))))>"
                        ]
                    ],
                    [
                        3,
                        [
                            "<Bool __eq__(__add__(0x8, Concat(0x0, Extract(7, 5, reg_40_1048_64), 0), reg_48_1047_64), 0xffffffffffffffec)>",
                            "<BV32 Extract(31, 0, Concat(0x0, Extract(0, 0, LShR(Concat(0x0, mem_ffffffffffffffec_1050_32), Concat(0x0, Extract(4, 0, reg_40_1048_64))))))>"
                        ]
                    ]
                ],
                "instructions": "no_instructions"
            },
            {
                "block_addr": 4203110,
                "constraints": [
                    [
                        1,
                        [
                            "<Bool __ne__(reg_48_1047_64, 0x0)>"
                        ]
                    ]
                ],
                "instructions": "mov|rax|qword|ptr|rbp|-|0x28|    |jmp|0x402271|    "
            }
        ]
    },
    "func_name": "4203080"
}